- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
  - name: Create a cluster placement group
    ec2_placement_group:
      group_name: "{{ ec2_placement_group_name }}-cluster"
      strategy: cluster
      state: present
    register: cluster_placement_group

  - name: "[DEBUG] Print return information from the previous task"
    ansible.builtin.debug:
      var: cluster_placement_group

  - name: Validate cluster placement group
    ansible.builtin.assert:
      that:
      - cluster_placement_group.state == 'present'
      - cluster_placement_group.placement_group_info.strategy == 'cluster'
      - group_id in cluster_placement_group.placement_group

  - name: Create a partition placement group
    amazon.aws.ec2_placement_group:
      group_name: "{{ ec2_placement_group_name }}-partition"
      strategy: partition
      partition_count: 2
      state: present
    register: partition_placement_group
  
  - name: Validate partition placement group
    ansible.builtin.assert:
      that:
      - partition_placement_group.state == 'present'
      - partition_placement_group.placement_group.partition_count == 2
      - partition_placement_group.placement_group.strategy == 'partition'
      - group_id in partition_placement_group.placement_group

  - name: Create a spread placement group
    amazon.aws.ec2_placement_group:
      group_name: "{{ ec2_placement_group_name }}-spread"
      strategy: spread
      spread_domain: host
      state: present
    register: spread_placement_group

  - name: Validate spread placement group
    ansible.builtin.assert:
      that:
      - spread_placement_group.state == 'present'
      - spread_placement_group.placement_group.spread_domain == 'host'
      - spread_placement_group.placement_group.strategy == 'spread'
      - group_id in spread_placement_group.placement_group
