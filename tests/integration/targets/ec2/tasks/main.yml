---
- module_defaults:
    group/aws:
      aws_region: '{{ aws_region }}'
      aws_access_key: '{{ aws_access_key | default(omit) }}'
      aws_secret_key: '{{ aws_secret_key | default(omit) }}'
      security_token: '{{ security_token | default(omit) }}'
  block:

    # SETUP: vpc, ec2 key pair, subnet, security group, ec2 instance
    - name: create a VPC to work in
      ec2_vpc_net:
        cidr_block: '{{ vpc_cidr }}'
        state: present
        name: '{{ resource_prefix }}_setup'
        resource_tags:
          Name: '{{ resource_prefix }}_setup'
      register: setup_vpc

    - name: create a key pair to use for creating an ec2 instance
      ec2_key:
        name: '{{ resource_prefix }}_setup'
        state: present
      register: setup_key

    - name: create a subnet to use for creating an ec2 instance
      ec2_vpc_subnet:
        az: '{{ ec2_region }}a'
        tags: '{{ resource_prefix }}_setup'
        vpc_id: '{{ setup_vpc.vpc.id }}'
        cidr: '{{ subnet_cidr }}'
        state: present
        resource_tags:
          Name: '{{ resource_prefix }}_setup'
      register: setup_subnet

    - name: create a security group to use for creating an ec2 instance
      ec2_group:
        name: '{{ resource_prefix }}_setup'
        description: 'created by Ansible integration tests'
        state: present
        vpc_id: '{{ setup_vpc.vpc.id }}'
      register: setup_sg

    # ============================================================

    - name: test instance is started
      ec2:
        instance_type: t2.micro
        key_name: '{{ setup_key.key.name }}'
        state: present
        image: '{{ ec2_ami_name }}'
        wait: yes
        instance_tags:
          ResourcePrefix: '{{ resource_prefix }}-integration_tests'
        group_id: '{{ setup_sg.group_id }}'
        vpc_subnet_id: '{{ setup_subnet.subnet.id }}'
      register: test_instance

    - name: assert instance started
      assert:
        that:
          - "test_instance.instances[0].state == 'running'"

    - name: test instance is terminated
      ec2:
        instance_ids: "{{ test_instance.instance_ids }}"
        state: absent
        wait: yes
      register: result

    - name: assert instance terminated
      assert:
        that:
          - "result.instances[0].state == 'terminated'"

    - name: test terminated instance is ignored when stopping
      ec2:
        instance_tags:
          ResourcePrefix: '{{ resource_prefix }}-integration_tests'
        state: stopped
        wait: yes
      register: result

    - name: assert resource not changed
      assert:
        that:
          - "result.changed == False"

    # ========================================================

  always:

    # ============================================================


    # TEAR DOWN: ec2 instance, ec2 key pair, security group, vpc
    - name: Announce teardown start
      debug:
        msg: "***** TESTING COMPLETE. COMMENCE TEARDOWN *****"

    - name: delete test instance
      ec2:
        instance_ids: '{{ test_instance.instance_ids }}'
        state: absent
        wait: yes
      ignore_errors: yes

    - name: remove setup keypair
      ec2_key:
        name: '{{resource_prefix}}_setup'
        state: absent
      ignore_errors: yes

    - name: remove setup security group
      ec2_group:
        name: '{{ resource_prefix }}_setup'
        description: 'created by Ansible integration tests'
        state: absent
        vpc_id: '{{ setup_vpc.vpc.id }}'
      ignore_errors: yes

    - name: remove setup subnet
      ec2_vpc_subnet:
        az: '{{ ec2_region }}a'
        tags: '{{resource_prefix}}_setup'
        vpc_id: '{{ setup_vpc.vpc.id }}'
        cidr: '{{ subnet_cidr }}'
        state: absent
        resource_tags:
          Name: '{{ resource_prefix }}_setup'
      ignore_errors: yes

    - name: remove setup VPC
      ec2_vpc_net:
        cidr_block: '{{ vpc_cidr }}'
        state: absent
        name: '{{ resource_prefix }}_setup'
        resource_tags:
          Name: '{{ resource_prefix }}_setup'
      ignore_errors: yes
