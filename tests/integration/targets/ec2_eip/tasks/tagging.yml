---
- name: Test EIP tagging
  vars:
    add_tags:
      another_tag: another Value {{ resource_prefix }}
  block:
    # ------------------------------------------------------------------------------------------
    # Test tagging
    # ------------------------------------------------------------------------------------------
    - name: Allocate a new eip
      amazon.aws.ec2_eip:
        state: present
      register: eip

    - name: Tag EIP - check_mode
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags: "{{ eip_test_tags | combine(add_tags) }}"
      register: tag_eip
      check_mode: true

    - ansible.builtin.assert:
        that:
          - tag_eip is changed

    - name: Tag EIP
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags: "{{ eip_test_tags | combine(add_tags) }}"
      register: tag_eip

    - amazon.aws.ec2_eip_info:
        filters:
          public-ip: "{{ eip.public_ip }}"
      register: eip_info

    - ansible.builtin.assert:
        that:
          - tag_eip is changed
          - '"AnsibleEIPTestPrefix" in eip_info.addresses[0].tags'
          - '"another_tag" in eip_info.addresses[0].tags'
          - eip_info.addresses[0].tags['AnsibleEIPTestPrefix'] == resource_prefix
          - eip_info.addresses[0].tags['another_tag'] == 'another Value ' + resource_prefix

    - name: Tag EIP (idempotence) - check_mode
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags: "{{ eip_test_tags | combine(add_tags) }}"
      register: tag_eip
      check_mode: true

    - ansible.builtin.assert:
        that:
          - tag_eip is not changed

    - name: Tag EIP (idempotence)
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags: "{{ eip_test_tags | combine(add_tags) }}"
      register: tag_eip

    - amazon.aws.ec2_eip_info:
        filters:
          public-ip: "{{ eip.public_ip }}"
      register: eip_info

    - ansible.builtin.assert:
        that:
          - tag_eip is not changed
          - '"AnsibleEIPTestPrefix" in eip_info.addresses[0].tags'
          - '"another_tag" in eip_info.addresses[0].tags'
          - eip_info.addresses[0].tags['AnsibleEIPTestPrefix'] == resource_prefix
          - eip_info.addresses[0].tags['another_tag'] == 'another Value ' + resource_prefix

    - name: Ensure only 1 EIP was allocated
      ansible.builtin.include_tasks: tasks/common.yml
      vars:
        has_new_eip: true

    # ------------------------------------------------------------------------------------------
    # Test updating tags
    # ------------------------------------------------------------------------------------------
    - name: Add another Tag - check_mode
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags:
          third tag: Third tag - {{ resource_prefix }}
        purge_tags: false
      register: tag_eip
      check_mode: true

    - ansible.builtin.assert:
        that:
          - tag_eip is changed

    - name: Add another Tag
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags:
          third tag: Third tag - {{ resource_prefix }}
        purge_tags: false
      register: tag_eip

    - amazon.aws.ec2_eip_info:
        filters:
          public-ip: "{{ eip.public_ip }}"
      register: eip_info

    - ansible.builtin.assert:
        that:
          - tag_eip is changed
          - '"AnsibleEIPTestPrefix" in eip_info.addresses[0].tags'
          - '"another_tag" in eip_info.addresses[0].tags'
          - '"third tag" in eip_info.addresses[0].tags'
          - eip_info.addresses[0].tags['AnsibleEIPTestPrefix'] == resource_prefix
          - eip_info.addresses[0].tags['another_tag'] == 'another Value ' + resource_prefix
          - eip_info.addresses[0].tags['third tag'] == 'Third tag - ' + resource_prefix

    - name: Ensure no EIP was allocated
      ansible.builtin.include_tasks: tasks/common.yml
      vars:
        has_no_new_eip: true

    - name: Add another Tag (idempotence) - check_mode
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags:
          third tag: Third tag - {{ resource_prefix }}
        purge_tags: false
      register: tag_eip
      check_mode: true

    - ansible.builtin.assert:
        that:
          - tag_eip is not changed

    - name: Add another Tag (idempotence)
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags:
          third tag: Third tag - {{ resource_prefix }}
        purge_tags: false
      register: tag_eip

    - amazon.aws.ec2_eip_info:
        filters:
          public-ip: "{{ eip.public_ip }}"
      register: eip_info

    - ansible.builtin.assert:
        that:
          - tag_eip is not changed
          - '"AnsibleEIPTestPrefix" in eip_info.addresses[0].tags'
          - '"another_tag" in eip_info.addresses[0].tags'
          - '"third tag" in eip_info.addresses[0].tags'
          - eip_info.addresses[0].tags['AnsibleEIPTestPrefix'] == resource_prefix
          - eip_info.addresses[0].tags['another_tag'] == 'another Value ' + resource_prefix
          - eip_info.addresses[0].tags['third tag'] == 'Third tag - ' + resource_prefix

    # ------------------------------------------------------------------------------------------
    # Test purge_tags
    # ------------------------------------------------------------------------------------------
    - name: Purge tags - check_mode
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags: "{{ eip_test_tags }}"
        purge_tags: true
      register: tag_eip
      check_mode: true

    - ansible.builtin.assert:
        that:
          - tag_eip is changed

    - name: Purge tags
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags: "{{ eip_test_tags }}"
        purge_tags: true
      register: tag_eip

    - amazon.aws.ec2_eip_info:
        filters:
          public-ip: "{{ eip.public_ip }}"
      register: eip_info

    - ansible.builtin.assert:
        that:
          - tag_eip is changed
          - '"AnsibleEIPTestPrefix" in eip_info.addresses[0].tags'
          - '"another_tag" not in eip_info.addresses[0].tags'
          - '"third tag" not in eip_info.addresses[0].tags'
          - eip_info.addresses[0].tags['AnsibleEIPTestPrefix'] == resource_prefix

    - name: Purge tags (idempotence) - check_mode
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags: "{{ eip_test_tags }}"
        purge_tags: true
      register: tag_eip
      check_mode: true

    - ansible.builtin.assert:
        that:
          - tag_eip is not changed

    - name: Purge tags (idempotence)
      amazon.aws.ec2_eip:
        state: present
        public_ip: "{{ eip.public_ip }}"
        tags: "{{ eip_test_tags }}"
        purge_tags: true
      register: tag_eip

    - amazon.aws.ec2_eip_info:
        filters:
          public-ip: "{{ eip.public_ip }}"
      register: eip_info

    - ansible.builtin.assert:
        that:
          - tag_eip is not changed
          - '"AnsibleEIPTestPrefix" in eip_info.addresses[0].tags'
          - '"another_tag" not in eip_info.addresses[0].tags'
          - '"third tag" not in eip_info.addresses[0].tags'
          - eip_info.addresses[0].tags['AnsibleEIPTestPrefix'] == resource_prefix

  always:
    - name: Release EIPs
      ansible.builtin.include_tasks: tasks/common.yml
      vars:
        delete_eips: true
