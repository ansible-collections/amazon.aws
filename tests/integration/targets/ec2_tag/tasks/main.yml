---
# tasks file for test_ec2_tag
- module_defaults:
    group/aws:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      security_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - name: Create an EC2 volume so we have something to tag
      ec2_vol:
        name: "{{ resource_prefix }} ec2_tag volume"
        volume_size: 1
        state: present
        zone: "{{ aws_region }}a"
      register: volume

    - name: List the tags on the volume (ec2_tag_info)
      ec2_tag_info:
        resource: "{{ volume.volume_id }}"
      register: result_info

    - assert:
        that:
          - result_info.tags | length == 1
          - result_info.tags.Name == '{{ resource_prefix }} ec2_tag volume'

    - name: Set some new tags on the volume
      ec2_tag:
        resource: "{{ volume.volume_id }}"
        state: present
        tags:
          foo: foo
          bar: baz
          baz: also baz
      register: result
    - name: List the new tags on the volume
      ec2_tag_info:
        resource: "{{ volume.volume_id }}"
      register: result_info

    - assert:
        that:
          - result is changed
          - result.tags | length == 4
          - result.added_tags | length == 3
          - result.tags.Name == '{{ resource_prefix }} ec2_tag volume'
          - result.tags.foo == 'foo'
          - result.tags.bar == 'baz'
          - result.tags.baz == 'also baz'
          - result_info.tags | length == 4
          - result_info.tags.Name == '{{ resource_prefix }} ec2_tag volume'
          - result_info.tags.foo == 'foo'
          - result_info.tags.bar == 'baz'
          - result_info.tags.baz == 'also baz'

    - name: Remove a tag by name
      ec2_tag:
        resource: "{{ volume.volume_id }}"
        state: absent
        tags:
          baz:
      register: result

    - assert:
        that:
          - result is changed
          - result.removed_tags | length == 1
          - "'baz' in result.removed_tags"

    - name: Don't remove a tag
      ec2_tag:
        resource: "{{ volume.volume_id }}"
        state: absent
        tags:
          foo: baz
      register: result

    - assert:
        that:
          - result is not changed

    - name: Remove a tag
      ec2_tag:
        resource: "{{ volume.volume_id }}"
        state: absent
        tags:
          foo: foo
      register: result

    - assert:
        that:
          - result is changed
          - result.tags | length == 2
          - "'added_tags' not in result"
          - result.removed_tags | length == 1
          - result.tags.Name == '{{ resource_prefix }} ec2_tag volume'
          - result.tags.bar == 'baz'

    - name: Set an exclusive tag
      ec2_tag:
        resource: "{{ volume.volume_id }}"
        purge_tags: true
        tags:
          baz: quux
      register: result

    - assert:
        that:
          - result is changed
          - result.tags | length == 1
          - result.added_tags | length == 1
          - result.removed_tags | length == 2
          - result.tags.baz == 'quux'

    - name: Remove all tags
      ec2_tag:
        resource: "{{ volume.volume_id }}"
        purge_tags: true
        tags: {}
      register: result

    - assert:
        that:
          - result is changed
          - result.tags | length == 0

  always:
    - name: Remove the volume
      ec2_vol:
        id: "{{ volume.volume_id }}"
        state: absent
      register: result
      until: result is not failed
      ignore_errors: yes
      retries: 10
