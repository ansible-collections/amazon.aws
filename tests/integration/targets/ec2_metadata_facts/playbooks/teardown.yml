---
- name: Cleanup after ec2_metadata_facts tests
  module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"

  hosts: localhost

  tasks:
  # ============================================================

    - name: Terminate the instance
      amazon.aws.ec2_instance:
        state: absent
        instance_ids:
          - "{{ ec2_instance_id }}"
          - "{{ ec2_instance_id_py2 }}"
        wait: true
      ignore_errors: true
      retries: 5
      register: remove
      until: remove is successful

    - name: Remove ssh key
      amazon.aws.ec2_key:
        name: "{{ ec2_key_name }}"
        state: absent
      ignore_errors: true

    - name: Remove the public route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc_id }}"
        route_table_id: "{{ vpc_route_table_id }}"
        lookup: id
        state: absent
      ignore_errors: true
      retries: 5
      register: remove
      until: remove is successful

    - name: Remove the internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc_id }}"
        state: absent
      ignore_errors: true
      retries: 5
      register: remove
      until: remove is successful

    - name: Remove the security group
      amazon.aws.ec2_security_group:
        group_id: "{{ vpc_sg_id }}"
        state: absent
      ignore_errors: true
      retries: 5
      register: remove
      until: remove is successful

    - name: Remove the subnet
      amazon.aws.ec2_vpc_subnet:
        cidr: "{{ vpc_cidr }}"
        az: "{{ availability_zone }}"
        vpc_id: "{{ vpc_id }}"
        state: absent
      ignore_errors: true
      retries: 5
      register: remove
      until: remove is successful

    - name: Remove the VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ resource_prefix }}-vpc"
        cidr_block: "{{ vpc_cidr }}"
        state: absent
      ignore_errors: true
      retries: 5
      register: remove
      until: remove is successful
