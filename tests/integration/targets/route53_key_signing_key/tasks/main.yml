---
- name: Integration tests for the route53_ksk module
  module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - name: Get ARN of calling user
      amazon.aws.aws_caller_info:
      register: aws_caller_info

    - name: Create a KMS key
      amazon.aws.kms_key:
        alias: "{{ resource_prefix }}-kms-route53"
        policy: "{{ lookup('template', 'kms_policy.j2') }}"
        state: present
        enabled: true
        customer_master_key_spec: "ECC_NIST_P256"
        key_usage: "SIGN_VERIFY"
      register: kms_key

    - name: Create a Route53 public zone
      amazon.aws.route53_zone:
        zone: "{{ resource_prefix }}.public"
        comment: "Route53 Zone for KSK Testing"
        state: present
      register: _hosted_zone

    - name: Create a Key Signing Key request (check_mode)
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        key_management_service_arn: "{{ kms_key.key_arn }}"
        caller_reference: "{{ aws_caller_info.arn }}"
        status: "INACTIVE"
        state: present
      check_mode: true
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - _ksk_request.changed
          - '"msg" in _ksk_request'
          - '"Would have created the Key Signing Key if not in check_mode." in _ksk_request.msg'

    - name: Create a Key Signing Key request
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        key_management_service_arn: "{{ kms_key.key_arn }}"
        caller_reference: "{{ aws_caller_info.arn }}"
        status: "INACTIVE"
        state: present
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - '"change_info" in _ksk_request'
          - _ksk_request.changed
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.status == "INACTIVE"
          - _ksk_request.change_info.status == "PENDING"
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.name == resource_prefix + '-ksk'

    - name: Create a Key Signing Key request (idempotency)
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        key_management_service_arn: "{{ kms_key.key_arn }}"
        caller_reference: "{{ aws_caller_info.arn }}"
        status: "INACTIVE"
        state: present
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - not _ksk_request.changed
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.status == "INACTIVE"
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.name == resource_prefix + '-ksk'

    - name: Activate the Key Signing Key request (check_mode)
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        key_management_service_arn: "{{ kms_key.key_arn }}"
        caller_reference: "{{ aws_caller_info.arn }}"
        status: "ACTIVE"
        state: present
      check_mode: true
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - _ksk_request.changed
          - '"msg" in _ksk_request'
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.name == resource_prefix + '-ksk'
          - '"Would have updated the Key Signing Key status to ACTIVE if not in check_mode." in _ksk_request.msg'

    - name: Activate the Key Signing Key request
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        key_management_service_arn: "{{ kms_key.key_arn }}"
        caller_reference: "{{ aws_caller_info.arn }}"
        status: "ACTIVE"
        state: present
        wait: true
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - '"change_info" in _ksk_request'
          - _ksk_request.changed
          - _ksk_request.key_signing_key.status == "ACTIVE"
          - _ksk_request.change_info.status == "INSYNC"
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.name == resource_prefix + '-ksk'

    - name: Activate the Key Signing Key request (idempotency)
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        key_management_service_arn: "{{ kms_key.key_arn }}"
        caller_reference: "{{ aws_caller_info.arn }}"
        status: "ACTIVE"
        state: present
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - not _ksk_request.changed
          - _ksk_request.key_signing_key.status == "ACTIVE"
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.name == resource_prefix + '-ksk'

    - name: Enable DNSSEC for Route53 public zone (check_mode)
      amazon.aws.route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: present
        dnssec: true
      check_mode: true
      register: _hosted_zone_dnssec

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _hosted_zone_dnssec is successful
          - _hosted_zone_dnssec.changed

    - name: Enable DNSSEC for Route53 public zone
      amazon.aws.route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: present
        dnssec: true
      register: _hosted_zone_dnssec

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _hosted_zone_dnssec is successful
          - _hosted_zone_dnssec.changed

    - name: Disable DNSSEC for Route53 public zone (check_mode)
      amazon.aws.route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: present
        dnssec: false
      check_mode: true
      register: _hosted_zone_dnssec

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _hosted_zone_dnssec is successful
          - _hosted_zone_dnssec.changed

    - name: Disable DNSSEC for Route53 public zone
      amazon.aws.route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: present
        dnssec: false
      register: _hosted_zone_dnssec

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _hosted_zone_dnssec is successful
          - _hosted_zone_dnssec.changed

    - name: Delete the Route53 public zone (expected to fail)
      amazon.aws.route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: absent
      register: _delete_hosted_zone
      ignore_errors: true

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _delete_hosted_zone is not successful
          - '"msg" in _delete_hosted_zone'
          - '"The specified hosted zone contains DNSSEC Key Signing Keys and so cannot be deleted" in _delete_hosted_zone.msg'

    - name: Deactivate the Key Signing Key request
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        key_management_service_arn: "{{ kms_key.key_arn }}"
        caller_reference: "{{ aws_caller_info.arn }}"
        status: "INACTIVE"
        state: present
        wait: true
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - '"change_info" in _ksk_request'
          - _ksk_request.changed
          - _ksk_request.key_signing_key.status == "INACTIVE"
          - _ksk_request.change_info.status == "INSYNC"
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.name == resource_prefix + '-ksk'

    - name: Deactivate the Key Signing Key request (idempotency)
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        key_management_service_arn: "{{ kms_key.key_arn }}"
        caller_reference: "{{ aws_caller_info.arn }}"
        status: "INACTIVE"
        state: present
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - not _ksk_request.changed
          - _ksk_request.key_signing_key.status == "INACTIVE"
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key.name == resource_prefix + '-ksk'

    - name: Delete the Key Signing Key request (check_mode)
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        state: absent
      check_mode: true
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - _ksk_request.changed
          - '"msg" in _ksk_request'
          - '"key_signing_key" in _ksk_request'
          - _ksk_request.key_signing_key == {}
          - '"Would have deleted the Key Signing Key if not in check_mode." in _ksk_request.msg'

    - name: Delete the Key Signing Key request
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        state: absent
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - '"change_info" in _ksk_request'
          - _ksk_request.changed
          - _ksk_request.change_info.status == "PENDING"

    - name: Delete the Key Signing Key request (idempotency)
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        state: absent
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - not _ksk_request.changed

    - name: Delete a not existing Key Signing Key request
      amazon.aws.route53_key_signing_key:
        name: "not existing ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        state: absent
      register: _ksk_request

    - name: Assert success
      ansible.builtin.assert:
        that:
          - _ksk_request is successful
          - not _ksk_request.changed

  always:
    - name: Disable DNSSEC for Route53 public zone
      amazon.aws.route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: present
        dnssec: false
      ignore_errors: true

    - name: Delete the Key Signing Key Request
      amazon.aws.route53_key_signing_key:
        name: "{{ resource_prefix }}-ksk"
        hosted_zone_id: "{{ _hosted_zone.zone_id }}"
        state: absent
      ignore_errors: true

    - name: Delete the Route53 public zone
      amazon.aws.route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: absent
      ignore_errors: true

    - name: Delete the KSM key
      amazon.aws.kms_key:
        state: absent
        alias: "{{ resource_prefix }}-kms-route53"
        pending_window: 7
      ignore_errors: true
