---
# Tests for rds_subnet_group
#
# Note: (From Amazon's documentation)
# https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/rds.html#RDS.Client.modify_db_subnet_group
# DB subnet groups must contain at least one subnet in at least two AZs in the
# AWS Region.

- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
  # ============================================================

    - name: Fetch AZ availability
      amazon.aws.aws_az_info:
      register: az_info

    - name: Assert that we have multiple AZs available to us
      ansible.builtin.assert:
        that: az_info.availability_zones | length >= 2

    - name: Pick AZs
      ansible.builtin.set_fact:
        az_one: "{{ az_info.availability_zones[0].zone_name }}"
        az_two: "{{ az_info.availability_zones[1].zone_name }}"

    # ============================================================

    - name: Create a VPC
      amazon.aws.ec2_vpc_net:
        state: present
        cidr_block: "{{ vpc_cidr }}"
        name: "{{ resource_prefix }}"
      register: vpc

    - name: Create subnets
      amazon.aws.ec2_vpc_subnet:
        state: present
        cidr: "{{ item.cidr }}"
        az: "{{ item.az }}"
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: "{{ item.name }}"
      with_items:
        - cidr: "{{ subnet_a }}"
          az: "{{ az_one }}"
          name: "{{ resource_prefix }}-subnet-a"
        - cidr: "{{ subnet_b }}"
          az: "{{ az_two }}"
          name: "{{ resource_prefix }}-subnet-b"
        - cidr: "{{ subnet_c }}"
          az: "{{ az_one }}"
          name: "{{ resource_prefix }}-subnet-c"
        - cidr: "{{ subnet_d }}"
          az: "{{ az_two }}"
          name: "{{ resource_prefix }}-subnet-d"
      register: subnets

    - ansible.builtin.set_fact:
        subnet_ids: '{{ subnets.results | map(attribute="subnet.id") | list }}'

    # ============================================================

    - ansible.builtin.include_tasks: params.yml
    - ansible.builtin.include_tasks: tests.yml
  always:
    - name: Remove subnet group
      amazon.aws.rds_subnet_group:
        state: absent
        name: "{{ resource_prefix }}"
      ignore_errors: true

    - name: Remove subnets
      amazon.aws.ec2_vpc_subnet:
        state: absent
        cidr: "{{ item.cidr }}"
        vpc_id: "{{ vpc.vpc.id }}"
      with_items:
        - cidr: "{{ subnet_a }}"
          name: "{{ resource_prefix }}-subnet-a"
        - cidr: "{{ subnet_b }}"
          name: "{{ resource_prefix }}-subnet-b"
        - cidr: "{{ subnet_c }}"
          name: "{{ resource_prefix }}-subnet-c"
        - cidr: "{{ subnet_d }}"
          name: "{{ resource_prefix }}-subnet-d"
      ignore_errors: true
      register: removed_subnets
      until: removed_subnets is succeeded
      retries: 5
      delay: 5

    - name: Remove the VPC
      amazon.aws.ec2_vpc_net:
        state: absent
        cidr_block: "{{ vpc_cidr }}"
        name: "{{ resource_prefix }}"
      ignore_errors: true
      register: removed_vpc
      until: removed_vpc is success
      retries: 5
      delay: 5

  # ============================================================
