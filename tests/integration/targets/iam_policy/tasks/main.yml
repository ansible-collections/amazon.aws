---
- name: Run integration tests for IAM (inline) Policy management
  module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    # ============================================================
    - name: Create user for tests
      amazon.aws.iam_user:
        state: present
        name: "{{ iam_name }}"
      register: result
    - name: Ensure user was created
      ansible.builtin.assert:
        that:
          - result is changed

    - name: Create role for tests
      amazon.aws.iam_role:
        state: present
        name: "{{ iam_name }}"
        assume_role_policy_document: "{{ lookup('file','no_trust.json') }}"
      register: result
    - name: Ensure role was created
      ansible.builtin.assert:
        that:
          - result is changed

    - name: Create group for tests
      amazon.aws.iam_group:
        state: present
        name: "{{ iam_name }}"
      register: result
    - name: Ensure group was created
      ansible.builtin.assert:
        that:
          - result is changed

    # ============================================================

    - name: Run tests for each type of object
      ansible.builtin.include_tasks: object.yml
      loop_control:
        loop_var: iam_type
      with_items:
        - user
        - group
        - role

  # ============================================================

  always:
    # ============================================================
    - name: Remove user
      amazon.aws.iam_user:
        state: absent
        name: "{{ iam_name }}"
      ignore_errors: true
    - name: Remove role
      amazon.aws.iam_role:
        state: absent
        name: "{{ iam_name }}"
      ignore_errors: true
    - name: Remove group
      amazon.aws.iam_group:
        state: absent
        name: "{{ iam_name }}"
      ignore_errors: true
