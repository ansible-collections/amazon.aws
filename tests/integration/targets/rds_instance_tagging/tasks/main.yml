- name: rds_instance / tagging integration tests
  collections:
  - community.aws
  module_defaults:
    group/aws:
      access_key: '{{ aws_access_key }}'
      secret_key: '{{ aws_secret_key }}'
      session_token: '{{ security_token | default(omit) }}'
      region: '{{ aws_region }}'
  block:
  - name: Test tagging db with storage type gp3
    import_tasks: test_tagging_gp3.yml

  - name: Ensure the resource doesn't exist
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result

  - assert:
      that:
      - not result.changed
    ignore_errors: yes

    # Test invalid bad options
  - name: Create a DB instance with an invalid engine
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: thisisnotavalidengine
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
    register: result
    ignore_errors: true

  - assert:
      that:
      - result.failed
      - '"value of engine must be one of" in result.msg'

    # Test creation, adding tags and enabling encryption
  - name: Create a mariadb instance
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      storage_encrypted: true
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: result

  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == '{{ instance_id }}'
      - result.tags | length == 2
      - result.tags.Name == '{{ instance_id }}'
      - result.tags.Created_by == 'Ansible rds_instance tests'
      - result.kms_key_id
      - result.storage_encrypted == true

  - name: Test impotency omitting tags - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
    register: result
    check_mode: yes

  - assert:
      that:
      - not result.changed

  - name: Test impotency omitting tags
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
    register: result

  - assert:
      that:
      - not result.changed
      - result.db_instance_identifier
      - result.tags | length == 2

  - name: Idempotence with minimal options
    rds_instance:
      id: '{{ instance_id }}'
      state: present
    register: result

  - assert:
      that:
      - not result.changed
      - result.db_instance_identifier
      - result.tags | length == 2

  - name: Test tags are not purged if purge_tags is False
    rds_instance:
      db_instance_identifier: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      tags: {}
      purge_tags: false
    register: result

  - assert:
      that:
      - not result.changed
      - result.tags | length == 2

  - name: Add a tag and remove a tag - check_mode
    rds_instance:
      db_instance_identifier: '{{ instance_id }}'
      state: present
      tags:
        Name: '{{ instance_id }}-new'
        Created_by: Ansible rds_instance tests
      purge_tags: true
    register: result
    check_mode: yes

  - assert:
      that:
      - result.changed

  - name: Add a tag and remove a tag
    rds_instance:
      db_instance_identifier: '{{ instance_id }}'
      state: present
      tags:
        Name: '{{ instance_id }}-new'
        Created_by: Ansible rds_instance tests
      purge_tags: true
    register: result

  - assert:
      that:
      - result.changed
      - result.tags | length == 2
      - result.tags.Name == '{{ instance_id }}-new'

  - name: Add a tag and remove a tag (idempotence) - check_mode
    rds_instance:
      db_instance_identifier: '{{ instance_id }}'
      state: present
      tags:
        Name: '{{ instance_id }}-new'
        Created_by: Ansible rds_instance tests
      purge_tags: true
    register: result
    check_mode: yes

  - assert:
      that:
      - not result.changed

  - name: Add a tag and remove a tag (idempotence)
    rds_instance:
      db_instance_identifier: '{{ instance_id }}'
      state: present
      tags:
        Name: '{{ instance_id }}-new'
        Created_by: Ansible rds_instance tests
      purge_tags: true
    register: result

  - assert:
      that:
      - not result.changed
      - result.tags | length == 2
      - result.tags.Name == '{{ instance_id }}-new'

  always:
  - name: Remove DB instance
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
      wait: false
    ignore_errors: yes
