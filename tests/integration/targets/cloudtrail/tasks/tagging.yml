---
- name: Tests relating to tagging cloudtrails
  vars:
    first_tags:
      Key with Spaces: Value with spaces
      CamelCaseKey: CamelCaseValue
      pascalCaseKey: pascalCaseValue
      snake_case_key: snake_case_value
    second_tags:
      New Key with Spaces: Value with spaces
      NewCamelCaseKey: CamelCaseValue
      newPascalCaseKey: pascalCaseValue
      new_snake_case_key: snake_case_value
    third_tags:
      Key with Spaces: Value with spaces
      CamelCaseKey: CamelCaseValue
      pascalCaseKey: pascalCaseValue
      snake_case_key: snake_case_value
      New Key with Spaces: Updated Value with spaces
    final_tags:
      Key with Spaces: Value with spaces
      CamelCaseKey: CamelCaseValue
      pascalCaseKey: pascalCaseValue
      snake_case_key: snake_case_value
      New Key with Spaces: Updated Value with spaces
      NewCamelCaseKey: CamelCaseValue
      newPascalCaseKey: pascalCaseValue
      new_snake_case_key: snake_case_value
  # Mandatory settings
  module_defaults:
    amazon.aws.cloudtrail:
      name: "{{ cloudtrail_name }}"
      s3_bucket_name: "{{ s3_bucket_name }}"
      state: present
  #    community.aws.cloudtrail_info:
  #      name: '{{ cloudtrail_name }}'
  block:
  ###

    - name: test adding tags to cloudtrail (check mode)
      amazon.aws.cloudtrail:
        tags: "{{ first_tags }}"
        purge_tags: true
      register: update_result
      check_mode: true
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is changed

    - name: test adding tags to cloudtrail
      amazon.aws.cloudtrail:
        tags: "{{ first_tags }}"
        purge_tags: true
      register: update_result
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is changed
          - update_result.trail.tags == first_tags

    - name: test adding tags to cloudtrail - idempotency (check mode)
      amazon.aws.cloudtrail:
        tags: "{{ first_tags }}"
        purge_tags: true
      register: update_result
      check_mode: true
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is not changed

    - name: test adding tags to cloudtrail - idempotency
      amazon.aws.cloudtrail:
        tags: "{{ first_tags }}"
        purge_tags: true
      register: update_result
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is not changed
          - update_result.trail.tags == first_tags

    ###

    - name: test updating tags with purge on cloudtrail (check mode)
      amazon.aws.cloudtrail:
        tags: "{{ second_tags }}"
        purge_tags: true
      register: update_result
      check_mode: true
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is changed

    - name: test updating tags with purge on cloudtrail
      amazon.aws.cloudtrail:
        tags: "{{ second_tags }}"
        purge_tags: true
      register: update_result
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is changed
          - update_result.trail.tags == second_tags

    - name: test updating tags with purge on cloudtrail - idempotency (check mode)
      amazon.aws.cloudtrail:
        tags: "{{ second_tags }}"
        purge_tags: true
      register: update_result
      check_mode: true
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is not changed

    - name: test updating tags with purge on cloudtrail - idempotency
      amazon.aws.cloudtrail:
        tags: "{{ second_tags }}"
        purge_tags: true
      register: update_result
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is not changed
          - update_result.trail.tags == second_tags

    ###

    - name: test updating tags without purge on cloudtrail (check mode)
      amazon.aws.cloudtrail:
        tags: "{{ third_tags }}"
        purge_tags: false
      register: update_result
      check_mode: true
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is changed

    - name: test updating tags without purge on cloudtrail
      amazon.aws.cloudtrail:
        tags: "{{ third_tags }}"
        purge_tags: false
      register: update_result
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is changed
          - update_result.trail.tags == final_tags

    - name: test updating tags without purge on cloudtrail - idempotency (check mode)
      amazon.aws.cloudtrail:
        tags: "{{ third_tags }}"
        purge_tags: false
      register: update_result
      check_mode: true
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is not changed

    - name: test updating tags without purge on cloudtrail - idempotency
      amazon.aws.cloudtrail:
        tags: "{{ third_tags }}"
        purge_tags: false
      register: update_result
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is not changed
          - update_result.trail.tags == final_tags

    #  ###
    #
    #  - name: test that cloudtrail_info returns the tags
    #    amazon.aws.cloudtrail_info:
    #    register: tag_info
    #  - name: assert tags present
    #    assert:
    #      that:
    #      - tag_info.trail.tags == final_tags
    #
    #  ###

    - name: test no tags param cloudtrail (check mode)
      amazon.aws.cloudtrail: {}
      register: update_result
      check_mode: true
    - name: assert no change
      ansible.builtin.assert:
        that:
          - update_result is not changed
          - update_result.trail.tags == final_tags

    - name: test no tags param cloudtrail
      amazon.aws.cloudtrail: {}
      register: update_result
    - name: assert no change
      ansible.builtin.assert:
        that:
          - update_result is not changed
          - update_result.trail.tags == final_tags

    ###

    - name: test removing tags from cloudtrail (check mode)
      amazon.aws.cloudtrail:
        tags: {}
        purge_tags: true
      register: update_result
      check_mode: true
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is changed

    - name: test removing tags from cloudtrail
      amazon.aws.cloudtrail:
        tags: {}
        purge_tags: true
      register: update_result
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is changed
          - update_result.trail.tags == {}

    - name: test removing tags from cloudtrail - idempotency (check mode)
      amazon.aws.cloudtrail:
        tags: {}
        purge_tags: true
      register: update_result
      check_mode: true
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is not changed

    - name: test removing tags from cloudtrail - idempotency
      amazon.aws.cloudtrail:
        tags: {}
        purge_tags: true
      register: update_result
    - name: assert that update succeeded
      ansible.builtin.assert:
        that:
          - update_result is not changed
          - update_result.trail.tags == {}
