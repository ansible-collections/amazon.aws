---
- name: 'route53_zone integration tests'
  collections:
    - amazon.aws
  module_defaults:
    group/aws:
      access_key: '{{ aws_access_key }}'
      secret_key: '{{ aws_secret_key }}'
      session_token: '{{ security_token | default(omit) }}'
      region: '{{ aws_region }}'
  block:

    # ============================================================

    - name: Create VPC for use in testing
      ec2_vpc_net:
        name: "{{ resource_prefix }}-vpc"
        cidr_block: 10.22.32.0/23
        tags:
          Name: Ansible ec2_instance Testing VPC
        tenancy: default
      register: testing_vpc

    # ============================================================
    - name: Create a public zone
      route53_zone:
        zone: "{{ resource_prefix }}.public"
        comment: original comment
        state: present
        tags:
          TestTag: "{{ resource_prefix }}"
          another_tag: "{{ resource_prefix }} again"
      register: output

    - assert:
        that:
          - output.changed
          - output.comment == 'original comment'
          - output.name == '{{ resource_prefix }}.public.'
          - output.tags.TestTag == '{{ resource_prefix }}'
          - output.tags.another_tag == '{{ resource_prefix }} again'
          - not output.private_zone

    # ============================================================
    - name: Create a public zone (CHECK MODE)
      route53_zone:
        zone: "{{ resource_prefix }}.check.public"
        comment: original comment
        state: present
        tags:
          TestTag: "{{ resource_prefix }}"
          another_tag: "{{ resource_prefix }} again"
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed
          - output.comment == 'original comment'
          - output.name == '{{ resource_prefix }}.check.public.'
          - output.tags.TestTag == '{{ resource_prefix }}'
          - output.tags.another_tag == '{{ resource_prefix }} again'
          - not output.private_zone

    # ============================================================
    - name: Do an idemptotent update of a public zone
      route53_zone:
        zone: "{{ resource_prefix }}.public"
        comment: original comment
        state: present
        tags:
          TestTag: "{{ resource_prefix }}"
          another_tag: "{{ resource_prefix }} again"
      register: output

    - assert:
        that:
          - not output.changed
          - output.comment == 'original comment'
          - output.name == '{{ resource_prefix }}.public.'
          - output.tags.TestTag == '{{ resource_prefix }}'
          - output.tags.another_tag == '{{ resource_prefix }} again'
          - not output.private_zone

    - name: Do an idemptotent update of a public zone (CHECK MODE)
      route53_zone:
        zone: "{{ resource_prefix }}.public"
        comment: original comment
        state: present
        tags:
          TestTag: "{{ resource_prefix }}"
          another_tag: "{{ resource_prefix }} again"
      register: output
      check_mode: yes

    - assert:
        that:
          - not output.changed
          - output.comment == 'original comment'
          - output.name == '{{ resource_prefix }}.public.'
          - output.tags.TestTag == '{{ resource_prefix }}'
          - output.tags.another_tag == '{{ resource_prefix }} again'
          - not output.private_zone

    # ============================================================
    - name: Modify tags on a public zone
      route53_zone:
        zone: "{{ resource_prefix }}.public"
        comment: original comment
        state: present
        tags:
          AnotherTag: "{{ resource_prefix }}.anothertag"
        purge_tags: true
      register: output

    - assert:
        that:
          - output.changed
          - "'TestTag' not in output.tags"
          - output.tags.AnotherTag == '{{ resource_prefix }}.anothertag'

    # ============================================================
    - name: Update comment and remove tags of a public zone
      route53_zone:
        zone: "{{ resource_prefix }}.public"
        comment: updated comment
        state: present
        purge_tags: true
        tags: {}
      register: output

    - assert:
        that:
          - output.changed
          - output.result.comment == "updated comment"
          - not output.tags

    - name: Update comment and remove tags of a public zone (CHECK MODE)
      route53_zone:
        zone: "{{ resource_prefix }}.public"
        comment: updated comment for check
        state: present
        purge_tags: true
        tags: {}
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed
          - output.result.comment == "updated comment for check"
          - not output.tags

    # ============================================================
    - name: Delete public zone (CHECK MODE)
      route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: absent
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed
          - "'Successfully deleted' in output.result"

    - name: Delete public zone
      route53_zone:
        zone: "{{ resource_prefix }}.public"
        state: absent
      register: output

    - assert:
        that:
          - output.changed
          - "'Successfully deleted' in output.result"

    # ============================================================
    - name: Create a private zone (CHECK MODE)
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: original comment
        state: present
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed

    - name: Create a private zone
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: original comment
        state: present
      register: output

    - assert:
        that:
          - output.changed
    # ============================================================
    - name: Idemptotent update a private zone
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: original comment
        state: present
      register: output

    - assert:
        that:
          - not output.changed
          - "'There is already a private hosted zone in the same region with the same VPC' in output.msg"

    - name: Idemptotent update a private zone (CHECK MODE)
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: original comment
        state: present
      register: output
      check_mode: yes

    - assert:
        that:
          - not output.changed
          - "'There is already a private hosted zone in the same region with the same VPC' in output.msg"

    # ============================================================
    - name: Update private zone comment
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: updated_comment
        state: present
      register: output

    - assert:
        that:
          - output.changed
          - output.result.comment == "updated_comment"

    - name: Update private zone comment (CHECK MODE)
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: updated_comment check
        state: present
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed
          - output.result.comment == "updated_comment check"

    # ============================================================
    - name: Try to delete private zone without setting vpc_id and vpc_region
      route53_zone:
        zone: "{{ resource_prefix }}.private"
        state: absent
      register: output

    - assert:
        that:
          - not output.changed
          - "output.result == 'No zone to delete.'"

    - name: Try to delete private zone without setting vpc_id and vpc_region (CHECK MODE)
      route53_zone:
        zone: "{{ resource_prefix }}.private"
        state: absent
      register: output
      check_mode: yes

    - assert:
        that:
          - not output.changed
          - "output.result == 'No zone to delete.'"

    # ============================================================
    - name: Try to delete a public zone that does not exists
      route53_zone:
        zone: "{{ resource_prefix }}.publicfake"
        comment: original comment
        state: absent
      register: output

    - assert:
        that:
          - not output.changed
          - "output.result == 'No zone to delete.'"

    - name: Try to delete a public zone that does not exists (CHECK MODE)
      route53_zone:
        zone: "{{ resource_prefix }}.publicfake"
        comment: original comment
        state: absent
      register: output
      check_mode: yes

    - assert:
        that:
          - not output.changed
          - "output.result == 'No zone to delete.'"

    # ============================================================
    - name: Delete private zone (CHECK MODE)
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        state: absent
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed
          - "'Successfully deleted' in output.result"

    - name: Delete private zone
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        state: absent
      register: output

    - assert:
        that:
          - output.changed
          - "'Successfully deleted' in output.result"

    # ============================================================
    - name: Create a private zone (new format) (CHECK MODE)
      route53_zone:
        vpcs:
          - id: "{{ testing_vpc.vpc.id }}"
            region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: original comment
        state: present
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed

    - name: Create a private zone (new format)
      route53_zone:
        vpcs:
          - id: "{{ testing_vpc.vpc.id }}"
            region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: original comment
        state: present
      register: output

    - assert:
        that:
          - output.changed

    # ============================================================
    - name: Idemptotent update a private zone (new format) (CHECK MODE)
      route53_zone:
        vpcs:
          - id: "{{ testing_vpc.vpc.id }}"
            region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: original comment
        state: present
      register: output
      check_mode: yes

    - assert:
        that:
          - not output.changed
          - "'There is already a private hosted zone in the same region with the same VPC' in output.msg"

    - name: Idemptotent update a private zone (new format)
      route53_zone:
        vpcs:
          - id: "{{ testing_vpc.vpc.id }}"
            region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: original comment
        state: present
      register: output

    - assert:
        that:
          - not output.changed
          - "'There is already a private hosted zone in the same region with the same VPC' in output.msg"

    # ============================================================
    - name: Update a private zone comment (new format) (CHECK MODE)
      route53_zone:
        vpcs:
          - id: "{{ testing_vpc.vpc.id }}"
            region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: new comment
        state: present
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed

    - name: Update a private zone comment (new format)
      route53_zone:
        vpcs:
          - id: "{{ testing_vpc.vpc.id }}"
            region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        comment: new comment
        state: present
      register: output

    - assert:
        that:
          - output.changed

    # ============================================================
    - name: Delete private zone (new format) (CHECK MODE)
      route53_zone:
        vpcs:
          - id: "{{ testing_vpc.vpc.id }}"
            region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        state: absent
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed
          - "'Successfully deleted' in output.result"

    - name: Delete private zone (new format)
      route53_zone:
        vpcs:
          - id: "{{ testing_vpc.vpc.id }}"
            region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        state: absent
      register: output

    # ============================================================
    - block:
        - name: Create second VPC for use in testing
          ec2_vpc_net:
            name: "{{ resource_prefix }}-vpc2"
            cidr_block: 10.22.34.0/23
            tags:
              Name: Ansible ec2_instance Testing VPC 2
            tenancy: default
          register: second_testing_vpc

        - name: Create a private zone with multiple VPCs (CHECK MODE)
          route53_zone:
            vpcs:
              - id: "{{ testing_vpc.vpc.id }}"
                region: "{{ aws_region }}"
              - id: "{{ second_testing_vpc.vpc.id }}"
                region: "{{ aws_region }}"
            zone: "{{ resource_prefix }}.private"
            comment: original comment
            state: present
          register: output
          check_mode: yes

        - assert:
            that:
              - output.changed

        - name: Create a private zone with multiple VPCs
          route53_zone:
            vpcs:
              - id: "{{ testing_vpc.vpc.id }}"
                region: "{{ aws_region }}"
              - id: "{{ second_testing_vpc.vpc.id }}"
                region: "{{ aws_region }}"
            zone: "{{ resource_prefix }}.private"
            comment: original comment
            state: present
          register: output

        - assert:
            that:
              - output.changed
              - output.vpc_id == testing_vpc.vpc.id  # The first one for backwards compatibility
              - output.vpc_region == aws_region
              - (output.vpcs | length) == 2
              - output.vpcs.1.id == second_testing_vpc.vpc.id
              - output.vpcs.1.region == aws_region

        # ============================================================
        - name: Delete private zone with multiple VPCs (CHECK MODE)
          route53_zone:
            vpcs:
              - id: "{{ testing_vpc.vpc.id }}"
                region: "{{ aws_region }}"
              - id: "{{ second_testing_vpc.vpc.id }}"
                region: "{{ aws_region }}"
            zone: "{{ resource_prefix }}.private"
            state: absent
          register: output
          check_mode: yes

        - assert:
            that:
              - output.changed
              - "'Successfully deleted' in output.result"

        - name: Delete private zone with multiple VPCs
          route53_zone:
            vpcs:
              - id: "{{ testing_vpc.vpc.id }}"
                region: "{{ aws_region }}"
              - id: "{{ second_testing_vpc.vpc.id }}"
                region: "{{ aws_region }}"
            zone: "{{ resource_prefix }}.private"
            state: absent
          register: output

        - assert:
            that:
              - output.changed
              - "'Successfully deleted' in output.result"

      always:
        - name: Delete second VPC for use in testing
          ec2_vpc_net:
            name: "{{ resource_prefix }}-vpc2"
            cidr_block: 10.22.34.0/23
            state: absent

    # ============================================================
    - name: Create a public zone
      route53_zone:
        zone: "{{ resource_prefix }}.public2"
        comment: this is an example
        state: present
      register: new_zone

    # Delete zone using its id
    - name: Delete zone using attribute hosted_zone_id (CHECK MODE)
      route53_zone:
        zone: "{{ resource_prefix }}.public2"
        hosted_zone_id: "{{new_zone.zone_id}}"
        state: absent
      register: output
      check_mode: yes

    - assert:
        that:
          - output.changed
          - "'Successfully deleted' in output.result"

    - name: Delete zone using attribute hosted_zone_id
      route53_zone:
        zone: "{{ resource_prefix }}.public2"
        hosted_zone_id: "{{new_zone.zone_id}}"
        state: absent
      register: output

    - assert:
        that:
          - output.changed
          - "'Successfully deleted' in output.result"

  # ============================================================
  always:
    - name: Ensure public zone is deleted
      route53_zone:
        zone: "{{ item }}"
        state: absent
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10
      with_items:
        - "{{ resource_prefix }}.public"
        - "{{ resource_prefix }}.public2"

    - name: Ensure private zone is deleted
      route53_zone:
        vpc_id: "{{ testing_vpc.vpc.id }}"
        vpc_region: "{{ aws_region }}"
        zone: "{{ resource_prefix }}.private"
        state: absent
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10

    - name: remove the VPC
      ec2_vpc_net:
        name: "{{ resource_prefix }}-vpc"
        cidr_block: 10.22.32.0/23
        state: absent
      register: removed
      until: removed is not failed
      ignore_errors: yes
      retries: 10
