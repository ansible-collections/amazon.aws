- set_fact:
    # As a lookup plugin we don't have access to module_defaults
    connection_args:
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      aws_security_token: "{{ security_token | default(omit) }}"
  # no_log: True

- module_defaults:
    group/aws:
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      security_token: "{{ security_token | default(omit) }}"
  block:
  - name: define secret name
    set_fact:
      secret_name: "aws-lookup-secret"
      secret_value: "{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}"
      on_missing_secret: "skip"

  
  # we really need to test templating at plugin level (for that reason parameters are not passed using **connection_args)
  - name: lookup missing secret
    set_fact:
      missing_secret: "{{ lookup('amazon.aws.aws_secret', '{{ secret_name }}', region='{{ connection_args.region }}', aws_access_key='{{ connection_args.aws_access_key }}', aws_secret_key='{{ connection_args.aws_secret_key }}', aws_security_token='{{ connection_args.aws_security_token }}', on_missing='{{ on_missing_secret }}') }}"
    when: connection_args.aws_security_token is defined
  
  - name: lookup missing secret
    set_fact:
      missing_secret: "{{ lookup('amazon.aws.aws_secret', '{{ secret_name }}', region='{{ connection_args.region }}', aws_access_key='{{ connection_args.aws_access_key }}', aws_secret_key='{{ connection_args.aws_secret_key }}', on_missing='{{ on_missing_secret }}') }}"
    when: connection_args.aws_security_token is undefined
  
  - name: assert that missing_secret is defined
    assert:
      that:
        - missing_secret is defined
        - missing_secret | list | length == 0
  
  - name: create secret "{{ secret_name }}"
    community.aws.aws_secret:
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      security_token: "{{ security_token | default(omit) }}"
      name: "{{ secret_name }}"
      secret: "{{ secret_value }}"
      tags:
        ansible-test: "aws-tests-integration"
      state: present
  
  - name: read secret value
    set_fact:
      look_secret: "{{ lookup('amazon.aws.aws_secret', '{{ secret_name }}', region='{{ connection_args.region }}', aws_access_key='{{ connection_args.aws_access_key }}', aws_secret_key='{{ connection_args.aws_secret_key }}', aws_security_token='{{ connection_args.aws_security_token }}') }}"
    when: connection_args.aws_security_token is defined
  
  - name: read secret value
    set_fact:
      look_secret: "{{ lookup('amazon.aws.aws_secret', '{{ secret_name }}', region='{{ connection_args.region }}', aws_access_key='{{ connection_args.aws_access_key }}', aws_secret_key='{{ connection_args.aws_secret_key }}') }}"
    when: connection_args.aws_security_token is undefined
  
  - name: assert that secret was successfully retrieved
    assert:
      that:
        - look_secret == secret_value
      
  always:
    # delete secret create
    - name: delete secret
      community.aws.aws_secret:
        region: "{{ aws_region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token | default(omit) }}"
        name: "{{ secret_name }}"
        state: absent
      ignore_errors: yes