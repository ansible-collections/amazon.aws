- name: Test updating inventory
  module_defaults:
    group/aws:
       aws_access_key: '{{ aws_access_key }}'
       aws_secret_key: '{{ aws_secret_key }}'
       security_token: '{{ security_token | default(omit) }}'
       region: '{{ aws_region }}'
  block:
    - name: assert group was populated with inventory but is empty
      assert:
        that:
          - "'aws_ec2' in groups"
          - "not groups.aws_ec2"

    - name: create a new host
      ec2_instance:
        image_id: "{{ images[aws_region] }}"
        exact_count: 1
        name: '{{ resource_prefix }}'
        instance_type: t2.micro
        security_groups: '{{ setup_sg.security_groups }}'
        vpc_subnet_id: '{{ setup_subnet.subnet.id }}'
        wait: no
      register: setup_instance

    - meta: refresh_inventory

    - name: assert group was populated with inventory and is no longer empty
      assert:
        that:
          - "'aws_ec2' in groups"
          - "groups.aws_ec2 | length == 1"
          - "groups.aws_ec2.0 == '{{ resource_prefix }}'"

    - name: remove setup ec2 instance
      ec2_instance:
        instance_type: t2.micro
        instance_ids: '{{ setup_instance.instance_ids }}'
        state: absent
        name: '{{ resource_prefix }}'
        security_groups: '{{ setup_sg.security_groups }}'
        vpc_subnet_id: '{{ setup_subnet.subnet.id }}'

    - meta: refresh_inventory

    - name: assert group was populated with inventory but is empty
      assert:
        that:
          - "'aws_ec2' in groups"
          - "not groups.aws_ec2"

  always:
    - name: remove setup ec2 instance
      ec2_instance:
        instance_type: t2.micro
        instance_ids: '{{ setup_instance.instance_ids }}'
        state: absent
        name: '{{ resource_prefix }}'
        security_groups: '{{ setup_sg.security_groups }}'
        vpc_subnet_id: '{{ setup_subnet.subnet.id }}'
      ignore_errors: yes
