---
- hosts: 127.0.0.1
  connection: local
  gather_facts: no
  environment: "{{ ansible_test.environment }}"
  tasks:

    - module_defaults:
        group/aws:
          access_key: '{{ aws_access_key }}'
          secret_key: '{{ aws_secret_key }}'
          session_token: '{{ security_token | default(omit) }}'
          region: '{{ aws_region }}'
      block:

        # Create VPC, subnet, security group, and find image_id to create instance

        - include_tasks: tasks/setup.yml

        # Create new host, refresh inventory
        - name: create a new host
          ec2_instance:
            image_id: '{{ image_id }}'
            name: '{{ resource_prefix }}_1'
            tags:
              tag_instance1: foo
            purge_tags: true
            instance_type: t2.micro
            security_groups: '{{ sg_id }}'
            vpc_subnet_id: '{{ subnet_id }}'
            wait: no
          register: setup_instance_1

        - meta: refresh_inventory

        - name: assert the hostvars are defined with prefix and/or suffix
          assert:
            that:
              - "hostvars['{{ resource_prefix }}_1'].{{ vars_prefix }}instance_type{{ vars_suffix }} == 't2.micro'"
              - "'{{ vars_prefix }}instance_type{{ vars_suffix }}' in hostvars['{{ resource_prefix }}_1']"
              - "'{{ vars_prefix }}image_id{{ vars_suffix }}' in hostvars['{{ resource_prefix }}_1']"
              - "'{{ vars_prefix }}instance_id{{ vars_suffix }}' in hostvars['{{ resource_prefix }}_1']"
              - "'instance_type' not in hostvars['{{ resource_prefix }}_1']"
              - "'image_id' not in hostvars['{{ resource_prefix }}_1']"
              - "'instance_id' not in hostvars['{{ resource_prefix }}_1']"
              - "'ansible_diff_mode' in hostvars['{{ resource_prefix }}_1']"
              - "'ansible_forks' in hostvars['{{ resource_prefix }}_1']"
              - "'ansible_version' in hostvars['{{ resource_prefix }}_1']"
          vars:
            vars_prefix: "{{ hostvars_prefix | default('') }}"
            vars_suffix: "{{ hostvars_suffix | default('') }}"
