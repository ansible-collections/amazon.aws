- block:

  - name: set the two regions for the source DB and the replica
    set_fact:
      region_src: '{{ aws_region }}'
      region_dest: '{{ aws_region }}'

  - name: Ensure the resource doesn't exist
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
      region: '{{ region_src }}'
    register: result

  - assert:
      that:
      - not result.changed
    ignore_errors: yes

  - name: Create a source DB instance
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: mysql
      backup_retention_period: 1
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_src }}'
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: source_db

  - assert:
      that:
      - source_db.changed
      - source_db.db_instance_identifier == '{{ instance_id }}'

    # ------------------------------------------------------------------------------------------

  - name: Create a read replica in a different region - check_mode
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      source_db_instance_identifier: '{{ instance_id }}'
      engine: mysql
      username: '{{ username }}'
      password: '{{ password }}'
      read_replica: true
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_dest }}'
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
      wait: yes
    register: result
    check_mode: yes

  - assert:
      that:
      - result.changed

  - name: Create a read replica in a different region
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      source_db_instance_identifier: '{{ instance_id }}'
      engine: mysql
      username: '{{ username }}'
      password: '{{ password }}'
      read_replica: true
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_dest }}'
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
      wait: yes
    register: result

  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == '{{ instance_id }}-replica'
      - result.tags | length == 2
      - result.tags.Name == '{{ instance_id }}'
      - result.tags.Created_by == 'Ansible rds_instance tests'

  - name: Test idempotence with a read replica - check_mode
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      source_db_instance_identifier: '{{ instance_id }}'
      engine: mysql
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_dest }}'
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: result
    check_mode: yes

  - assert:
      that:
      - not result.changed

  - name: Test idempotence with a read replica
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      source_db_instance_identifier: '{{ instance_id }}'
      engine: mysql
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_dest }}'
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: result

  - assert:
      that:
      - not result.changed

  - name: Test idempotence with read_replica=True
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      read_replica: true
      source_db_instance_identifier: '{{ instance_id }}'
      engine: mysql
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_dest }}'
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: result

  - assert:
      that:
      - not result.changed

    # ------------------------------------------------------------------------------------------

  - name: Promote the read replica - check_mode
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      read_replica: false
      region: '{{ region_dest }}'
    register: result
    check_mode: yes

  - assert:
      that:
      - result.changed

  - name: Promote the read replica
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      read_replica: false
      region: '{{ region_dest }}'
    register: result

  - assert:
      that:
      - result.changed

  - name: Test idempotence - check_mode
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      read_replica: false
      region: '{{ region_dest }}'
    register: result
    check_mode: yes

  - assert:
      that:
      - not result.changed

  - name: Test idempotence
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: present
      read_replica: false
      region: '{{ region_dest }}'
    register: result

  - assert:
      that:
      - not result.changed

  always:

  - name: Remove the DB instance
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
      region: '{{ region_src }}'
      wait: false
    ignore_errors: yes

  - name: Remove the DB replica
    rds_instance:
      id: '{{ instance_id }}-replica'
      state: absent
      skip_final_snapshot: true
      region: '{{ region_dest }}'
      wait: false
    ignore_errors: yes
