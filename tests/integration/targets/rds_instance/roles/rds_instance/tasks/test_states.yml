- block:
  - name: Ensure the resource doesn't exist
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result

  - assert:
      that:
      - not result.changed
    ignore_errors: yes

  - name: Create a mariadb instance - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      deletion_protection: true
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: result
    check_mode: yes

  - assert:
      that:
      - result.changed

  - name: Create a mariadb instance
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      deletion_protection: true
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: result

  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == '{{ instance_id }}'
      - result.tags | length == 2
      - result.tags.Name == '{{ instance_id }}'
      - result.tags.Created_by == 'Ansible rds_instance tests'
      - result.deletion_protection == True

  - name: Create a mariadb instance (idempotence) - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      deletion_protection: true
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: result
    check_mode: yes

  - assert:
      that:
      - not result.changed

  - name: Create a mariadb instance (idempotence)
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      deletion_protection: true
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
    register: result

  - assert:
      that:
      - not result.changed
      - result.db_instance_identifier == '{{ instance_id }}'
      - result.tags | length == 2
      - result.tags.Name == '{{ instance_id }}'
      - result.tags.Created_by == 'Ansible rds_instance tests'
      - result.deletion_protection == True

    # ------------------------------------------------------------------------------------------
    # Test stopping / rebooting instances

  - name: Reboot a stopped instance - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: rebooted
    register: result
    check_mode: yes

  - assert:
      that:
      - result.changed

  - name: Reboot a stopped instance
    rds_instance:
      id: '{{ instance_id }}'
      state: rebooted
    register: result

  - assert:
      that:
      - result.changed

    # ------------------------------------------------------------------------------------------

  - name: Stop the instance - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: stopped
    register: result
    check_mode: yes

  - assert:
      that:
      - result.changed

  - name: Stop the instance
    rds_instance:
      id: '{{ instance_id }}'
      state: stopped
    register: result

  - assert:
      that:
      - result.changed

  - name: Stop the instance (idempotence) - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: stopped
    register: result
    check_mode: yes

  - assert:
      that:
      - not result.changed

  - name: Stop the instance (idempotence)
    rds_instance:
      id: '{{ instance_id }}'
      state: stopped
    register: result

  - assert:
      that:
      - not result.changed

    # ------------------------------------------------------------------------------------------

  - name: Start the instance - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: started
    register: result
    check_mode: yes

  - assert:
      that:
      - result.changed

  - name: Start the instance
    rds_instance:
      id: '{{ instance_id }}'
      state: started
    register: result

  - assert:
      that:
      - result.changed

  - name: Start the instance (idempotence) - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: started
    register: result
    check_mode: yes

  - assert:
      that:
      - not result.changed

  - name: Start the instance (idempotence)
    rds_instance:
      id: '{{ instance_id }}'
      state: started
    register: result

  - assert:
      that:
      - not result.changed

    # ------------------------------------------------------------------------------------------
    # Test deletion protection / deletion

  - name: Ensure instance exists prior to deleting
    rds_instance_info:
      db_instance_identifier: '{{ instance_id }}'
    register: db_info

  - assert:
      that:
      - db_info.instances | length == 1

  - name: Attempt to delete DB instance with deletion protection (should fail)
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result
    ignore_errors: yes

  - assert:
      that:
      - result.failed

  - name: Turn off deletion protection
    rds_instance:
      id: '{{ instance_id }}'
      deletion_protection: false
    register: result

  - assert:
      that:
      - result.changed
      - result.deletion_protection == False

  - name: Delete the instance - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result
    check_mode: yes

  - assert:
      that:
      - result.changed

  - name: Delete the instance
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result

  - assert:
      that:
      - result.changed

  - name: Ensure instance was deleted
    rds_instance_info:
      db_instance_identifier: '{{ instance_id }}'
    register: db_info

  - assert:
      that:
      - db_info.instances | length == 0

  - name: Delete the instance (idempotence) - check_mode
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result
    check_mode: yes

  - assert:
      that:
      - not result.changed

  - name: Delete the instance (idempotence)
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result

  - assert:
      that:
      - not result.changed

  always:
  - name: Remove DB instance
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
      wait: false
    ignore_errors: yes
