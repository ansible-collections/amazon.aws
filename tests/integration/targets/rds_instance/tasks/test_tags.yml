---
  - block:

      - name: Ensure the resource doesn't exist
        rds_instance:
          db_instance_identifier: "{{ instance_id }}"
          state: absent
          skip_final_snapshot: True
        register: result

      - assert:
          that:
            - not result.changed
        ignore_errors: yes

      - name: Create a mariadb instance
        rds_instance:
          db_instance_identifier: "{{ instance_id }}"
          state: present
          engine: mariadb
          username: "{{ username }}"
          password: "{{ password }}"
          db_instance_class: "{{ db_instance_class }}"
          allocated_storage: "{{ allocated_storage }}"
          tags:
            Name: "{{ instance_id }}"
            Created_by: Ansible rds_instance tests
        register: result

      - assert:
          that:
            - result.changed
            - "result.db_instance_identifier == '{{ instance_id }}'"
            - "result.tags | length == 2"
            - "result.tags.Name == '{{ instance_id }}'"
            - "result.tags.Created_by == 'Ansible rds_instance tests'"

      - name: Test idempotence omitting tags
        rds_instance:
          db_instance_identifier: "{{ instance_id }}"
          state: present
          engine: mariadb
          username: "{{ username }}"
          password: "{{ password }}"
          db_instance_class: "{{ db_instance_class }}"
          allocated_storage: "{{ allocated_storage }}"
        register: result

      - assert:
          that:
            - not result.changed
            - "result.tags | length == 2"

      - name: Test tags are not purged if purge_tags is False
        rds_instance:
          db_instance_identifier: "{{ instance_id }}"
          state: present
          engine: mariadb
          username: "{{ username }}"
          password: "{{ password }}"
          db_instance_class: "{{ db_instance_class }}"
          allocated_storage: "{{ allocated_storage }}"
          tags: {}
          purge_tags: False
        register: result

      - assert:
          that:
            - not result.changed
            - "result.tags | length == 2"

      - name: Add a tag and remove a tag
        rds_instance:
          db_instance_identifier: "{{ instance_id }}"
          state: present
          tags:
            Name: "{{ instance_id }}-new"
            Created_by: Ansible rds_instance tests
          purge_tags: True
        register: result

      - assert:
          that:
            - result.changed
            - "result.tags | length == 2"
            - "result.tags.Name == '{{ instance_id }}-new'"

      - name: Remove all tags
        rds_instance:
          db_instance_identifier: "{{ instance_id }}"
          state: present
          engine: mariadb
          username: "{{ username }}"
          password: "{{ password }}"
          db_instance_class: "{{ db_instance_class }}"
          allocated_storage: "{{ allocated_storage }}"
          tags: {}
        register: result

      - assert:
          that:
            - result.changed
            - not result.tags

      - name: snapshot instance without tags
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: present
          wait: yes
        register: result

      - assert:
          that:
            - result.changed
            - not result.tags

      - name: add tags to snapshot
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: present
          tags:
            one: hello
            two: world
        register: result

      - assert:
          that:
            - result.changed
            - result.tags | length == 2

      - name: add tags to snapshot - idempotence
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: present
          tags:
            one: hello
            two: world
        register: result

      - assert:
          that:
            - not result.changed
            - result.tags | length == 2

      - name: add tag to snapshot using purge_tags False
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: present
          tags:
            one: hello
            three: another
          purge_tags: False
        register: result

      - assert:
          that:
            - result.changed
            - result.tags | length == 3

      - name: rerun tags but not setting purge_tags
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: present
          tags:
            one: hello
            three: another
        register: result

      - assert:
          that:
            - result.changed
            - result.tags | length == 2

      - name: rerun tags but not setting purge_tags - idempotence
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: present
          tags:
            one: hello
            three: another
        register: result

      - assert:
          that:
            - not result.changed
            - result.tags | length == 2

      - name: remove snapshot
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: absent
          wait: yes
        register: result

      - assert:
          that:
            - result.changed

      - name: create snapshot with tags
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: present
          tags:
            one: hello
            three: another
          purge_tags: yes
          wait: yes
        register: result

      - assert:
          that:
            - result.changed
            - result.tags | length == 2

    always:

      - name: tidy up snapshot
        rds_snapshot:
          db_instance_identifier: "{{ instance_id }}"
          db_snapshot_identifier: "{{ resource_prefix }}-test-tags"
          state: absent
        ignore_errors: yes

      - name: Ensure the resource doesn't exist
        rds_instance:
          db_instance_identifier: "{{ instance_id }}"
          state: absent
          skip_final_snapshot: True
        register: result

      - assert:
          that:
            - result.changed
