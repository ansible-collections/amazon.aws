- name: "remove Instances"
  ec2_instance:
    state: absent
    filters:
      vpc-id: "{{ testing_vpc.vpc.id }}"
    wait: yes
  ignore_errors: yes
  retries: 10

- name: "remove ENIs"
  ec2_eni_info:
    filters:
      vpc-id: "{{ testing_vpc.vpc.id }}"
  register: enis

- name: "delete all ENIs"
  ec2_eni:
    state: absent
    eni_id: "{{ item.id }}"
  register: removed
  until: removed is not failed
  with_items: "{{ enis.network_interfaces }}"
  ignore_errors: yes
  retries: 10

- name: "remove the security group"
  ec2_group:
    state: absent
    name: "{{ resource_prefix }}-sg"
    description: a security group for ansible tests
    vpc_id: "{{ testing_vpc.vpc.id }}"
  register: removed
  until: removed is not failed
  ignore_errors: yes
  retries: 10

- name: "remove the second security group"
  ec2_group:
    name: "{{ resource_prefix }}-sg-2"
    description: a security group for ansible tests
    vpc_id: "{{ testing_vpc.vpc.id }}"
    state: absent
  register: removed
  until: removed is not failed
  ignore_errors: yes
  retries: 10

- name: "remove subnet A"
  ec2_vpc_subnet:
    state: absent
    vpc_id: "{{ testing_vpc.vpc.id }}"
    cidr: "{{ subnet_a_cidr }}"
  register: removed
  until: removed is not failed
  ignore_errors: yes
  retries: 10

- name: "remove subnet B"
  ec2_vpc_subnet:
    state: absent
    vpc_id: "{{ testing_vpc.vpc.id }}"
    cidr: "{{ subnet_b_cidr }}"
  register: removed
  until: removed is not failed
  ignore_errors: yes
  retries: 10

- name: "remove the VPC"
  ec2_vpc_net:
    state: absent
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    tags:
      Name: Ansible Testing VPC
    tenancy: default
  register: removed
  until: removed is not failed
  ignore_errors: yes
  retries: 10
