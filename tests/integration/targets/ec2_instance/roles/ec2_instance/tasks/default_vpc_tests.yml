- block:
  - name: "Make instance in a default subnet of the VPC"
    ec2_instance:
      state: present
      name: "{{ resource_prefix }}-test-default-vpc"
      image_id: "{{ ec2_ami_id }}"
      tags:
        TestId: "{{ ec2_instance_tag_TestId }}"
      security_group: "default"
      instance_type: "{{ ec2_instance_type }}"
      wait: false
    register: in_default_vpc

  - name: "Make instance in a default subnet of the VPC(check mode)"
    ec2_instance:
      state: present
      name: "{{ resource_prefix }}-test-default-vpc-checkmode"
      image_id: "{{ ec2_ami_id }}"
      tags:
        TestId: "{{ ec2_instance_tag_TestId }}"
      security_group: "default"
      instance_type: "{{ ec2_instance_type }}"
    check_mode: yes

  - name: "fact presented ec2 instance"
    ec2_instance_info:
      filters:
        "tag:Name": "{{ resource_prefix }}-test-default-vpc"
    register: presented_instance_fact

  - name: "fact checkmode ec2 instance"
    ec2_instance_info:
      filters:
        "tag:Name": "{{ resource_prefix }}-test-default-vpc-checkmode"
    register: checkmode_instance_fact

  - name: "Confirm whether the check mode is working normally."
    assert:
      that:
        - "{{ presented_instance_fact.instances | length }} > 0"
        - "{{ checkmode_instance_fact.instances | length }} == 0"

  - name: "Terminate instances"
    ec2_instance:
      state: absent
      instance_ids: "{{ in_default_vpc.instance_ids }}"
      tags:
        TestId: "{{ ec2_instance_tag_TestId }}"

  always:
  - name: "Terminate vpc_tests instances"
    ec2_instance:
      state: absent
      filters:
        "tag:TestId": "{{ ec2_instance_tag_TestId }}"
      wait: yes
    ignore_errors: yes
