---
- name: Test launch template versioning
  vars:
    test_launch_template_name: "{{ resource_prefix }}-versioning"
  block:
    # =====================================================================
    # Create the launch template
    # =====================================================================
    - name: Create a launch template (check mode)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: c4.large
      register: _create_check
      check_mode: true

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        filters:
          launch-template-name: "{{ test_launch_template_name }}"
      register: _template_info

    - name: Ensure module reported changed while the template was not created
      ansible.builtin.assert:
        that:
          - _create_check is changed
          - '"default_version" not in _create_check'
          - '"latest_version" not in _create_check'
          - _template_info.launch_templates | length == 0

    - name: Create a launch template
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: c4.large
      register: _create

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        launch_template_ids:
          - "{{ _create.template.launch_template_id }}"
      register: _template_info

    - name: Ensure the launch template was created with the right version
      ansible.builtin.assert:
        that:
          - _create is changed
          - _create.default_version == 1
          - _create.latest_version == 1
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 1
          - _template_info.launch_templates[0].latest_version_number == 1
          - _template_info.launch_templates[0].versions | length == 1
          - _template_info.launch_templates[0].versions.0.launch_template_data.image_id == ec2_ami_id
          - _template_info.launch_templates[0].versions.0.launch_template_data.instance_type == "c4.large"

    - name: Create the same launch template once again
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: c4.large
      register: _create_idempotency

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        filters:
          launch-template-name: "{{ test_launch_template_name }}"
      register: _template_info

    - name: Ensure the module did not reported change (idempotency)
      ansible.builtin.assert:
        that:
          - _create_idempotency is not changed
          - _create.default_version == 1
          - _create.latest_version == 1
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 1
          - _template_info.launch_templates[0].latest_version_number == 1
          - _template_info.launch_templates[0].versions | length == 1
          - _template_info.launch_templates[0].versions.0.launch_template_data.image_id == ec2_ami_id
          - _template_info.launch_templates[0].versions.0.launch_template_data.instance_type == "c4.large"

    # =====================================================================
    # Create a new version of the launch template (set first version as default)
    # =====================================================================
    - name: Create a new version of the launch template (check mode)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        default_version: 1
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: m5.large
      register: _update_check
      check_mode: true

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        filters:
          launch-template-name: "{{ test_launch_template_name }}"
      register: _template_info

    - name: Ensure the module reported change in check mode
      ansible.builtin.assert:
        that:
          - _update_check is changed
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 1
          - _template_info.launch_templates[0].latest_version_number == 1
          - _template_info.launch_templates[0].versions | length == 1

    - name: Create a new version of the launch template
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        default_version: 1
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: m5.large
      register: _update

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        filters:
          launch-template-name: "{{ test_launch_template_name }}"
      register: _template_info

    - name: Ensure the launch template latest version has changed
      ansible.builtin.assert:
        that:
          - _update is changed
          - _update.default_version == 1
          - _update.latest_version == 2
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 1
          - _template_info.launch_templates[0].latest_version_number == 2
          - _template_info.launch_templates[0].versions | length == 2
          - created_template.launch_template_data.image_id == ec2_ami_id
          - created_template.launch_template_data.instance_type == "m5.large"
      vars:
        created_template: "{{ _template_info.launch_templates[0].versions | selectattr('version_number', 'equalto', 2) | first }}"

    - name: Create a new version of the launch template (idempotency)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        default_version: 1
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: m5.large
      register: _update_idempotency

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        filters:
          launch-template-name: "{{ test_launch_template_name }}"
      register: _template_info

    - name: Ensure the module did not reported change (idempotency)
      ansible.builtin.assert:
        that:
          - _update_idempotency is not changed
          - _update_idempotency.default_version == 1
          - _update_idempotency.latest_version == 2
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 1
          - _template_info.launch_templates[0].latest_version_number == 2
          - _template_info.launch_templates[0].versions | length == 2

    # =====================================================================
    # Set the latest version of the launch template as default
    # =====================================================================
    - name: Set the latest version of the launch template as default (check mode)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        default_version: latest
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: m5.large
      register: _set_version_check
      check_mode: true

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        filters:
          launch-template-name: "{{ test_launch_template_name }}"
      register: _template_info

    - name: Ensure the module reported change in check mode
      ansible.builtin.assert:
        that:
          - _set_version_check is changed
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 1
          - _template_info.launch_templates[0].latest_version_number == 2
          - _template_info.launch_templates[0].versions | length == 2

    - name: Set the latest version of the launch template as default
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        default_version: latest
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: m5.large
      register: _set_version

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        filters:
          launch-template-name: "{{ test_launch_template_name }}"
      register: _template_info

    - name: Ensure the launch template latest version has changed
      ansible.builtin.assert:
        that:
          - _set_version is changed
          - _set_version.default_version == 2
          - _set_version.latest_version == 2
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 2
          - _template_info.launch_templates[0].latest_version_number == 2
          - _template_info.launch_templates[0].versions | length == 2
          - created_template.launch_template_data.image_id == ec2_ami_id
          - created_template.launch_template_data.instance_type == "m5.large"
      vars:
        created_template: "{{ _template_info.launch_templates[0].versions | selectattr('version_number', 'equalto', 2) | first }}"

    - name: Set the latest version of the launch template as default (idempotency)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        default_version: latest
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: m5.large
      register: _set_version_idempotency

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        filters:
          launch-template-name: "{{ test_launch_template_name }}"
      register: _template_info

    - name: Ensure the module did not reported change (idempotency)
      ansible.builtin.assert:
        that:
          - _set_version_idempotency is not changed
          - _set_version_idempotency.default_version == 2
          - _set_version_idempotency.latest_version == 2
          - _template_info.launch_templates[0].default_version_number == 2
          - _template_info.launch_templates[0].latest_version_number == 2
          - _template_info.launch_templates[0].versions | length == 2

    # =====================================================================
    # Create another version
    # =====================================================================
    - name: Create a new launch template version (check mode)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: t3.medium
      register: _another_version_check
      check_mode: true

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        launch_template_ids:
          - "{{ _create.template.launch_template_id }}"
      register: _template_info

    - name: Ensure the module reported change in check_mode
      ansible.builtin.assert:
        that:
          - _another_version_check is changed
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 2
          - _template_info.launch_templates[0].latest_version_number == 2
          - _template_info.launch_templates[0].versions | length == 2

    - name: Create a new launch template version
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: t3.medium
      register: _another_version

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        launch_template_ids:
          - "{{ _create.template.launch_template_id }}"
      register: _template_info

    - name: Ensure the launch template latest version has changed
      ansible.builtin.assert:
        that:
          - _another_version is changed
          - _another_version.default_version == 3
          - _another_version.latest_version == 3
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 3
          - _template_info.launch_templates[0].latest_version_number == 3
          - _template_info.launch_templates[0].versions | length == 3
          - created_template.launch_template_data.image_id == ec2_ami_id
          - created_template.launch_template_data.instance_type == "t3.medium"
      vars:
        created_template: "{{ _template_info.launch_templates[0].versions | selectattr('version_number', 'equalto', 3) | first }}"

    - name: Create a new launch template version (idempotency)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ resource_prefix }}"
        instance_type: t3.medium
      register: _another_version_idempotency

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        launch_template_ids:
          - "{{ _create.template.launch_template_id }}"
      register: _template_info

    - name: Ensure the module did not reported change (idempotency)
      ansible.builtin.assert:
        that:
          - _another_version_idempotency is not changed
          - _another_version_idempotency.default_version == 3
          - _another_version_idempotency.latest_version == 3
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 3
          - _template_info.launch_templates[0].latest_version_number == 3
          - _template_info.launch_templates[0].versions | length == 3

    # =====================================================================
    # Create another version based on an old version
    # =====================================================================
    - name: Create new template version based on an old version (check mode)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        cpu_options:
          core_count: 1
          threads_per_core: 1
        source_version: 1
      register: _version_based_on_old_version_check
      check_mode: true

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        launch_template_ids:
          - "{{ _create.template.launch_template_id }}"
      register: _template_info

    - name: Ensure module reported change in check mode
      ansible.builtin.assert:
        that:
          - _version_based_on_old_version_check is changed
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 3
          - _template_info.launch_templates[0].latest_version_number == 3
          - _template_info.launch_templates[0].versions | length == 3

    - name: Create new template version based on an old version
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        cpu_options:
          core_count: 1
          threads_per_core: 1
        source_version: 1
      register: _version_based_on_old_version

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        launch_template_ids:
          - "{{ _create.template.launch_template_id }}"
      register: _template_info

    - name: Ensure the new launch template has been created with the right options
      ansible.builtin.assert:
        that:
          - _version_based_on_old_version is changed
          - _version_based_on_old_version.default_version == 4
          - _version_based_on_old_version.latest_version == 4
          - _version_based_on_old_version.latest_template.launch_template_data.instance_type == "c4.large"
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 4
          - _template_info.launch_templates[0].latest_version_number == 4
          - _template_info.launch_templates[0].versions | length == 4
          - created_template.launch_template_data.image_id == ec2_ami_id
          - created_template.launch_template_data.cpu_options.core_count == 1
          - created_template.launch_template_data.cpu_options.threads_per_core == 1
      vars:
        created_template: "{{ _template_info.launch_templates[0].versions | selectattr('version_number', 'equalto', 4) | first }}"

    # =====================================================================
    # Create another version with updated description
    # =====================================================================
    - name: Create a launch template version with another description (check mode)
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        version_description: "Fix something."
      register: _version_description_check
      check_mode: true

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        launch_template_ids:
          - "{{ _create.template.launch_template_id }}"
      register: _template_info

    - name: Ensure module reported change in check mode
      ansible.builtin.assert:
        that:
          - _version_description_check is changed
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 4
          - _template_info.launch_templates[0].latest_version_number == 4
          - _template_info.launch_templates[0].versions | length == 4

    - name: Create a launch template version with another description
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        version_description: "Fix something."
      register: _version_description

    - name: Read launch template information
      amazon.aws.ec2_launch_template_info:
        launch_template_ids:
          - "{{ _create.template.launch_template_id }}"
      register: _template_info

    - name: Ensure module reported change
      ansible.builtin.assert:
        that:
          - _version_description is changed
          - _version_description.default_version == 5
          - _version_description.latest_version == 5
          - _version_description.latest_template.version_description == "Fix something."
          - _template_info.launch_templates | length == 1
          - _template_info.launch_templates[0].default_version_number == 5
          - _template_info.launch_templates[0].latest_version_number == 5
          - _template_info.launch_templates[0].versions | length == 5
          - created_template.version_description == "Fix something."
      vars:
        created_template: "{{ _template_info.launch_templates[0].versions | selectattr('version_number', 'equalto', 5) | first }}"

  always:
    - name: Delete the template
      amazon.aws.ec2_launch_template:
        name: "{{ test_launch_template_name }}"
        state: absent
      ignore_errors: true
