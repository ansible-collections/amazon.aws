---
# Tests the setting of most parameters at the same time
#
# Note: Does not delete the attachment, so that there's a second VPC attached to
# the TGW when we run our _info tests in simple.yml
#
# =============================================================================
# Creation

- block:
  - name: '(CHECK_MODE) Create an attachment - complex parameters'
    check_mode: True
    ec2_transit_gateway_vpc_attachment:
      name: '{{ attachment_name_complex }}'
      transit_gateway: '{{ tgw_id }}'
      subnets:
      - '{{ subnet_id_b_1 }}'
      - '{{ subnet_id_b_2 }}'
      tags:
        tagA: 'example Value'
        Tag_B: 'second value'
      appliance_mode_support: True
      ipv6_support: True
    register: complex_attach

  - assert:
      that:
      - complex_attach is changed
      - '"attachments" in complex_attach'
      - complex_attach.attachments | length == 1
      - '"options" in attachment'
      - '"subnet_ids" in attachment'
      - '"tags" in attachment'
      - '"transit_gateway_id" in attachment'
      - '"vpc_id" in attachment'
      - '"appliance_mode_support" in attachment.options'
      - '"ipv6_support" in attachment.options'
      - attachment.options.appliance_mode_support == "enable"
      - attachment.options.ipv6_support == "enable"
      - attachment.subnet_ids | length == 2
      - subnet_id_b_1 in attachment.subnet_ids
      - subnet_id_b_2 in attachment.subnet_ids
      - attachment.tags | length == 3
      - '"Name" in attachment.tags'
      - '"tagA" in attachment.tags'
      - '"Tag_B" in attachment.tags'
      - attachment.tags.Name == attachment_name_complex
      - attachment.tags.tagA == "example Value"
      - attachment.tags.Tag_B == "second value"
      - attachment.transit_gateway_id == tgw_id
      - attachment.vpc_id == vpc_id_b
    vars:
      attachment: '{{ complex_attach.attachments[0] }}'

  - name: 'Create an attachment - complex parameters'
    ec2_transit_gateway_vpc_attachment:
      name: '{{ attachment_name_complex }}'
      transit_gateway: '{{ tgw_id }}'
      subnets:
      - '{{ subnet_id_b_1 }}'
      - '{{ subnet_id_b_2 }}'
      tags:
        tagA: 'example Value'
        Tag_B: 'second value'
      appliance_mode_support: True
      ipv6_support: True
    register: complex_attach

  - assert:
      that:
      - complex_attach is changed
      - '"attachments" in complex_attach'
      - complex_attach.attachments | length == 1
      - '"subnet_ids" in attachment'
      - '"transit_gateway_id" in attachment'
      - '"vpc_id" in attachment'
      - attachment.subnet_ids | length == 2
      - subnet_id_b_1 in attachment.subnet_ids
      - subnet_id_b_2 in attachment.subnet_ids
      - attachment.transit_gateway_id == tgw_id
      - attachment.vpc_id == vpc_id_b
      - '"creation_time" in attachment'
      - '"options" in attachment'
      - '"state" in attachment'
      - '"tags" in attachment'
      - '"transit_gateway_attachment_id" in attachment'
      - '"vpc_owner_id" in attachment'
      - '"appliance_mode_support" in attachment.options'
      - '"dns_support" in attachment.options'
      - '"ipv6_support" in attachment.options'
      - attachment.options.appliance_mode_support == 'enable'
      - attachment.options.dns_support == 'enable'
      - attachment.options.ipv6_support == 'enable'
      - attachment.transit_gateway_attachment_id.startswith('tgw-attach-')
      - attachment.state == 'available'
      - attachment.tags | length == 3
      - '"Name" in attachment.tags'
      - '"tagA" in attachment.tags'
      - '"Tag_B" in attachment.tags'
      - attachment.tags.Name == attachment_name_complex
      - attachment.tags.tagA == "example Value"
      - attachment.tags.Tag_B == "second value"
      - attachment.vpc_owner_id == vpc_owner_b
    vars:
      attachment: '{{ complex_attach.attachments[0] }}'

  - name: Save Attachment ID
    set_fact:
      complex_attachment_id: '{{ complex_attach.attachments[0].transit_gateway_attachment_id }}'

  - name: '(CHECK_MODE) Create an attachment - complex parameters -- IDEMPOTENCY'
    check_mode: True
    ec2_transit_gateway_vpc_attachment:
      name: '{{ attachment_name_complex }}'
      transit_gateway: '{{ tgw_id }}'
      subnets:
      - '{{ subnet_id_b_1 }}'
      - '{{ subnet_id_b_2 }}'
      tags:
        tagA: 'example Value'
        Tag_B: 'second value'
      appliance_mode_support: True
      ipv6_support: True
    register: complex_attach

  - assert:
      that:
      - complex_attach is not changed
      - '"attachments" in complex_attach'
      - complex_attach.attachments | length == 1
      - '"subnet_ids" in attachment'
      - '"transit_gateway_id" in attachment'
      - '"vpc_id" in attachment'
      - attachment.subnet_ids | length == 2
      - subnet_id_b_1 in attachment.subnet_ids
      - subnet_id_b_2 in attachment.subnet_ids
      - attachment.transit_gateway_id == tgw_id
      - attachment.vpc_id == vpc_id_b
      - '"creation_time" in attachment'
      - '"options" in attachment'
      - '"state" in attachment'
      - '"tags" in attachment'
      - '"transit_gateway_attachment_id" in attachment'
      - '"vpc_owner_id" in attachment'
      - '"appliance_mode_support" in attachment.options'
      - '"dns_support" in attachment.options'
      - '"ipv6_support" in attachment.options'
      - attachment.options.appliance_mode_support == 'enable'
      - attachment.options.dns_support == 'enable'
      - attachment.options.ipv6_support == 'enable'
      - attachment.transit_gateway_attachment_id == complex_attachment_id
      - attachment.state == 'available'
      - attachment.tags | length == 3
      - '"Name" in attachment.tags'
      - '"tagA" in attachment.tags'
      - '"Tag_B" in attachment.tags'
      - attachment.tags.Name == attachment_name_complex
      - attachment.tags.tagA == "example Value"
      - attachment.tags.Tag_B == "second value"
      - attachment.vpc_owner_id == vpc_owner_b
    vars:
      attachment: '{{ complex_attach.attachments[0] }}'

  - name: 'Create an attachment - complex parameters -- IDEMPOTENCY'
    ec2_transit_gateway_vpc_attachment:
      name: '{{ attachment_name_complex }}'
      transit_gateway: '{{ tgw_id }}'
      subnets:
      - '{{ subnet_id_b_1 }}'
      - '{{ subnet_id_b_2 }}'
      tags:
        tagA: 'example Value'
        Tag_B: 'second value'
      appliance_mode_support: True
      ipv6_support: True
    register: complex_attach

  - assert:
      that:
      - complex_attach is not changed
      - '"attachments" in complex_attach'
      - complex_attach.attachments | length == 1
      - '"subnet_ids" in attachment'
      - '"transit_gateway_id" in attachment'
      - '"vpc_id" in attachment'
      - attachment.subnet_ids | length == 2
      - subnet_id_b_1 in attachment.subnet_ids
      - subnet_id_b_2 in attachment.subnet_ids
      - attachment.transit_gateway_id == tgw_id
      - attachment.vpc_id == vpc_id_b
      - '"creation_time" in attachment'
      - '"options" in attachment'
      - '"state" in attachment'
      - '"tags" in attachment'
      - '"transit_gateway_attachment_id" in attachment'
      - '"vpc_owner_id" in attachment'
      - '"appliance_mode_support" in attachment.options'
      - '"dns_support" in attachment.options'
      - '"ipv6_support" in attachment.options'
      - attachment.options.appliance_mode_support == 'enable'
      - attachment.options.dns_support == 'enable'
      - attachment.options.ipv6_support == 'enable'
      - attachment.transit_gateway_attachment_id == complex_attachment_id
      - attachment.state == 'available'
      - attachment.tags | length == 3
      - '"Name" in attachment.tags'
      - '"tagA" in attachment.tags'
      - '"Tag_B" in attachment.tags'
      - attachment.tags.Name == attachment_name_complex
      - attachment.tags.tagA == "example Value"
      - attachment.tags.Tag_B == "second value"
      - attachment.vpc_owner_id == vpc_owner_b
    vars:
      attachment: '{{ complex_attach.attachments[0] }}'

# =============================================================================
# Update

  - name: '(CHECK_MODE) Update an attachment - complex parameters'
    check_mode: True
    ec2_transit_gateway_vpc_attachment:
      name: '{{ attachment_name_complex }}'
      transit_gateway: '{{ tgw_id }}'
      subnets:
      - '{{ subnet_id_b_1 }}'
      purge_subnets: True
      tags:
        tagC: '3'
        Tag_D: 'Hello again dear world'
      purge_tags: False
      dns_support: False
      ipv6_support: False
    register: complex_attach

  - assert:
      that:
      - complex_attach is changed
      - '"attachments" in complex_attach'
      - complex_attach.attachments | length == 1
      - '"subnet_ids" in attachment'
      - '"transit_gateway_id" in attachment'
      - '"vpc_id" in attachment'
      - attachment.subnet_ids | length == 1
      - subnet_id_b_1 in attachment.subnet_ids
      - attachment.transit_gateway_id == tgw_id
      - attachment.vpc_id == vpc_id_b
      - '"creation_time" in attachment'
      - '"options" in attachment'
      - '"state" in attachment'
      - '"tags" in attachment'
      - '"transit_gateway_attachment_id" in attachment'
      - '"vpc_owner_id" in attachment'
      - '"appliance_mode_support" in attachment.options'
      - '"dns_support" in attachment.options'
      - '"ipv6_support" in attachment.options'
      - attachment.options.appliance_mode_support == 'enable'
      - attachment.options.dns_support == 'disable'
      - attachment.options.ipv6_support == 'disable'
      - attachment.transit_gateway_attachment_id == complex_attachment_id
      - attachment.state == 'available'
      - attachment.tags | length == 5
      - '"Name" in attachment.tags'
      - '"tagA" in attachment.tags'
      - '"Tag_B" in attachment.tags'
      - '"tagC" in attachment.tags'
      - '"Tag_D" in attachment.tags'
      - attachment.tags.Name == attachment_name_complex
      - attachment.tags.tagA == "example Value"
      - attachment.tags.Tag_B == "second value"
      - attachment.tags.tagC == "3"
      - attachment.tags.Tag_D == "Hello again dear world"
      - attachment.vpc_owner_id == vpc_owner_b
    vars:
      attachment: '{{ complex_attach.attachments[0] }}'

  - name: 'Update an attachment - complex parameters'
    ec2_transit_gateway_vpc_attachment:
      name: '{{ attachment_name_complex }}'
      transit_gateway: '{{ tgw_id }}'
      subnets:
      - '{{ subnet_id_b_1 }}'
      purge_subnets: True
      tags:
        tagC: '3'
        Tag_D: 'Hello again dear world'
      purge_tags: False
      dns_support: False
      ipv6_support: False
    register: complex_attach

  - assert:
      that:
      - complex_attach is changed
      - '"attachments" in complex_attach'
      - complex_attach.attachments | length == 1
      - '"subnet_ids" in attachment'
      - '"transit_gateway_id" in attachment'
      - '"vpc_id" in attachment'
      - attachment.subnet_ids | length == 1
      - subnet_id_b_1 in attachment.subnet_ids
      - attachment.transit_gateway_id == tgw_id
      - attachment.vpc_id == vpc_id_b
      - '"creation_time" in attachment'
      - '"options" in attachment'
      - '"state" in attachment'
      - '"tags" in attachment'
      - '"transit_gateway_attachment_id" in attachment'
      - '"vpc_owner_id" in attachment'
      - '"appliance_mode_support" in attachment.options'
      - '"dns_support" in attachment.options'
      - '"ipv6_support" in attachment.options'
      - attachment.options.appliance_mode_support == 'enable'
      - attachment.options.dns_support == 'disable'
      - attachment.options.ipv6_support == 'disable'
      - attachment.transit_gateway_attachment_id == complex_attachment_id
      - attachment.state == 'available'
      - attachment.tags | length == 5
      - '"Name" in attachment.tags'
      - '"tagA" in attachment.tags'
      - '"Tag_B" in attachment.tags'
      - '"tagC" in attachment.tags'
      - '"Tag_D" in attachment.tags'
      - attachment.tags.Name == attachment_name_complex
      - attachment.tags.tagA == "example Value"
      - attachment.tags.Tag_B == "second value"
      - attachment.tags.tagC == "3"
      - attachment.tags.Tag_D == "Hello again dear world"
      - attachment.vpc_owner_id == vpc_owner_b
    vars:
      attachment: '{{ complex_attach.attachments[0] }}'

  - name: '(CHECK_MODE) Update an attachment - complex parameters -- IDEMPOTENCY'
    check_mode: True
    ec2_transit_gateway_vpc_attachment:
      name: '{{ attachment_name_complex }}'
      transit_gateway: '{{ tgw_id }}'
      subnets:
      - '{{ subnet_id_b_1 }}'
      purge_subnets: True
      tags:
        tagC: '3'
        Tag_D: 'Hello again dear world'
      purge_tags: False
      dns_support: False
      ipv6_support: False
    register: complex_attach

  - assert:
      that:
      - complex_attach is not changed
      - '"attachments" in complex_attach'
      - complex_attach.attachments | length == 1
      - '"subnet_ids" in attachment'
      - '"transit_gateway_id" in attachment'
      - '"vpc_id" in attachment'
      - attachment.subnet_ids | length == 1
      - subnet_id_b_1 in attachment.subnet_ids
      - attachment.transit_gateway_id == tgw_id
      - attachment.vpc_id == vpc_id_b
      - '"creation_time" in attachment'
      - '"options" in attachment'
      - '"state" in attachment'
      - '"tags" in attachment'
      - '"transit_gateway_attachment_id" in attachment'
      - '"vpc_owner_id" in attachment'
      - '"appliance_mode_support" in attachment.options'
      - '"dns_support" in attachment.options'
      - '"ipv6_support" in attachment.options'
      - attachment.options.appliance_mode_support == 'enable'
      - attachment.options.dns_support == 'disable'
      - attachment.options.ipv6_support == 'disable'
      - attachment.transit_gateway_attachment_id == complex_attachment_id
      - attachment.state == 'available'
      - attachment.tags | length == 5
      - '"Name" in attachment.tags'
      - '"tagA" in attachment.tags'
      - '"Tag_B" in attachment.tags'
      - '"tagC" in attachment.tags'
      - '"Tag_D" in attachment.tags'
      - attachment.tags.Name == attachment_name_complex
      - attachment.tags.tagA == "example Value"
      - attachment.tags.Tag_B == "second value"
      - attachment.tags.tagC == "3"
      - attachment.tags.Tag_D == "Hello again dear world"
      - attachment.vpc_owner_id == vpc_owner_b
    vars:
      attachment: '{{ complex_attach.attachments[0] }}'

  - name: 'Update an attachment - complex parameters -- IDEMPOTENCY'
    ec2_transit_gateway_vpc_attachment:
      name: '{{ attachment_name_complex }}'
      transit_gateway: '{{ tgw_id }}'
      subnets:
      - '{{ subnet_id_b_1 }}'
      purge_subnets: True
      tags:
        tagC: '3'
        Tag_D: 'Hello again dear world'
      purge_tags: False
      dns_support: False
      ipv6_support: False
    register: complex_attach

  - assert:
      that:
      - complex_attach is not changed
      - '"attachments" in complex_attach'
      - complex_attach.attachments | length == 1
      - '"subnet_ids" in attachment'
      - '"transit_gateway_id" in attachment'
      - '"vpc_id" in attachment'
      - attachment.subnet_ids | length == 1
      - subnet_id_b_1 in attachment.subnet_ids
      - attachment.transit_gateway_id == tgw_id
      - attachment.vpc_id == vpc_id_b
      - '"creation_time" in attachment'
      - '"options" in attachment'
      - '"state" in attachment'
      - '"tags" in attachment'
      - '"transit_gateway_attachment_id" in attachment'
      - '"vpc_owner_id" in attachment'
      - '"appliance_mode_support" in attachment.options'
      - '"dns_support" in attachment.options'
      - '"ipv6_support" in attachment.options'
      - attachment.options.appliance_mode_support == 'enable'
      - attachment.options.dns_support == 'disable'
      - attachment.options.ipv6_support == 'disable'
      - attachment.transit_gateway_attachment_id == complex_attachment_id
      - attachment.state == 'available'
      - attachment.tags | length == 5
      - '"Name" in attachment.tags'
      - '"tagA" in attachment.tags'
      - '"Tag_B" in attachment.tags'
      - '"tagC" in attachment.tags'
      - '"Tag_D" in attachment.tags'
      - attachment.tags.Name == attachment_name_complex
      - attachment.tags.tagA == "example Value"
      - attachment.tags.Tag_B == "second value"
      - attachment.tags.tagC == "3"
      - attachment.tags.Tag_D == "Hello again dear world"
      - attachment.vpc_owner_id == vpc_owner_b
    vars:
      attachment: '{{ complex_attach.attachments[0] }}'
