---
- name: Rds_instance / database_insights tests

  module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"

  block:
    - name: Install specific boto3 and botocore versions - database_insights available starting 1.35.72
      ansible.builtin.pip:
        name:
          - boto3{{ _boto3_comparison }}{{ _boto3_version }}
          - botocore{{ _botocore_comparison }}{{ _botocore_version }}
        virtualenv: "{{ botocore_virtualenv }}"
        virtualenv_command: "{{ botocore_virtualenv_command }}"
        virtualenv_site_packages: false
      vars:
        _boto3_version: "{{ boto3_version | default(default_boto3_version) }}"
        _botocore_version: "{{ botocore_version | default(default_botocore_version) }}"
        _is_default_boto3: "{{ _boto3_version == default_boto3_version }}"
        _is_default_botocore: "{{ _botocore_version == default_botocore_version }}"
        # Only set the default to >= if the other dep has been updated and the dep has not been set
        _default_boto3_comparison: "{% if _is_default_boto3 and not _is_default_botocore %}>={% else %}=={% endif %}"
        _default_botocore_comparison: "{% if _is_default_botocore and not _is_default_boto3 %}>={% else %}=={% endif %}"
        _boto3_comparison: "{{ boto3_comparison | default(_default_boto3_comparison) }}"
        _botocore_comparison: "{{ botocore_comparison | default(_default_botocore_comparison) }}"

    - name: Ensure the resource doesn't exist
      amazon.aws.rds_instance:
        id: "{{ instance_id }}"
        state: absent
        skip_final_snapshot: true
      register: result

    - ansible.builtin.assert:
        that:
          - not result.changed
      ignore_errors: true

    # TODO: Create more test scenarios including mutation to and from advanced
    - name: Create a mariadb instance with database_insights_mode set to advanced
      amazon.aws.rds_instance:
        id: "{{ instance_id }}"
        state: present
        engine: mariadb
        engine_version: "{{ mariadb_engine_version }}"
        allow_major_version_upgrade: true
        username: "{{ username }}"
        password: "{{ password }}"
        db_instance_class: "{{ db_instance_class }}"
        allocated_storage: "{{ allocated_storage }}"
        database_insights_mode: "{{ database_insights_advanced_mode }}"
        enable_performance_insights: true
        performance_insights_retention_period: 465
      register: result

    - ansible.builtin.assert:
        that:
          - result.changed
          - result.db_instance_identifier == instance_id
          - result.database_insights_mode == 'advanced'

  always:
    - name: Delete the instance
      amazon.aws.rds_instance:
        id: "{{ instance_id }}"
        state: absent
        skip_final_snapshot: true
        wait: false
      ignore_errors: true
