---
- name: Add Tag (CHECK MODE)
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    tags:
      TagA: ValueA
  check_mode: true
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is changed

- name: Add Tag
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    tags:
      TagA: ValueA
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is changed
      - iam_role.iam_role.role_name == test_role
      - iam_role.iam_role.tags | length == 1
      - '"TagA" in iam_role.iam_role.tags'
      - iam_role.iam_role.tags.TagA == "ValueA"

- name: Add Tag (no change) - check mode
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    tags:
      TagA: ValueA
  register: iam_role
  check_mode: true
- ansible.builtin.assert:
    that:
      - iam_role is not changed

- name: Add Tag (no change)
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    tags:
      TagA: ValueA
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is not changed
      - iam_role.iam_role.role_name == test_role
      - '"TagA" in iam_role.iam_role.tags'
      - iam_role.iam_role.tags.TagA == "ValueA"

- name: iam_role_info after adding Tags
  amazon.aws.iam_role_info:
    name: "{{ test_role }}"
  register: role_info
- ansible.builtin.assert:
    that:
      - role_info is succeeded
      - role_info.iam_roles | length == 1
      - role_info.iam_roles[0].arn.startswith("arn")
      - role_info.iam_roles[0].arn.endswith("role/" + test_role )
      - '"assume_role_policy_document" in role_info.iam_roles[0]'
      - '"create_date" in role_info.iam_roles[0]'
      - role_info.iam_roles[0].description == 'Ansible Test Role (updated) '+resource_prefix
      - role_info.iam_roles[0].inline_policies | length == 0
      - role_info.iam_roles[0].instance_profiles | length == 1
      - role_info.iam_roles[0].instance_profiles[0].instance_profile_name == test_role
      - role_info.iam_roles[0].instance_profiles[0].arn.startswith("arn")
      - role_info.iam_roles[0].instance_profiles[0].arn.endswith("instance-profile/" + test_role)
      - role_info.iam_roles[0].managed_policies | length == 0
      - role_info.iam_roles[0].max_session_duration == 43200
      - role_info.iam_roles[0].path == '/'
      - '"permissions_boundary" not in role_info.iam_roles[0]'
      - role_info.iam_roles[0].role_id == iam_role.iam_role.role_id
      - role_info.iam_roles[0].role_name == test_role
      - role_info.iam_roles[0].tags | length == 1
      - '"TagA" in role_info.iam_roles[0].tags'
      - role_info.iam_roles[0].tags.TagA == "ValueA"

# ------------------------------------------------------------------------------------------

- name: Update Tag (CHECK MODE)
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    tags:
      TagA: AValue
  check_mode: true
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is changed

- name: Update Tag
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    tags:
      TagA: AValue
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is changed
      - iam_role.iam_role.role_name == test_role
      - '"TagA" in iam_role.iam_role.tags'
      - iam_role.iam_role.tags.TagA == "AValue"

- name: Update Tag (no change) - check mode
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    tags:
      TagA: AValue
  register: iam_role
  check_mode: true
- ansible.builtin.assert:
    that:
      - iam_role is not changed

- name: Update Tag (no change)
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    tags:
      TagA: AValue
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is not changed
      - iam_role.iam_role.role_name == test_role
      - '"TagA" in iam_role.iam_role.tags'
      - iam_role.iam_role.tags.TagA == "AValue"

- name: iam_role_info after updating Tag
  amazon.aws.iam_role_info:
    name: "{{ test_role }}"
  register: role_info
- ansible.builtin.assert:
    that:
      - role_info is succeeded
      - role_info.iam_roles | length == 1
      - role_info.iam_roles[0].arn.startswith("arn")
      - role_info.iam_roles[0].arn.endswith("role/" + test_role )
      - '"assume_role_policy_document" in role_info.iam_roles[0]'
      - '"create_date" in role_info.iam_roles[0]'
      - role_info.iam_roles[0].description == 'Ansible Test Role (updated) '+resource_prefix
      - role_info.iam_roles[0].inline_policies | length == 0
      - role_info.iam_roles[0].instance_profiles | length == 1
      - role_info.iam_roles[0].instance_profiles[0].instance_profile_name == test_role
      - role_info.iam_roles[0].instance_profiles[0].arn.startswith("arn")
      - role_info.iam_roles[0].instance_profiles[0].arn.endswith("instance-profile/" + test_role)
      - role_info.iam_roles[0].managed_policies | length == 0
      - role_info.iam_roles[0].max_session_duration == 43200
      - role_info.iam_roles[0].path == '/'
      - '"permissions_boundary" not in role_info.iam_roles[0]'
      - role_info.iam_roles[0].role_id == iam_role.iam_role.role_id
      - role_info.iam_roles[0].role_name == test_role
      - role_info.iam_roles[0].tags | length == 1
      - '"TagA" in role_info.iam_roles[0].tags'
      - role_info.iam_roles[0].tags.TagA == "AValue"

# ------------------------------------------------------------------------------------------

- name: Add second Tag without purge (CHECK MODE)
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    purge_tags: false
    tags:
      TagB: ValueB
  check_mode: true
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is changed

- name: Add second Tag without purge
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    purge_tags: false
    tags:
      TagB: ValueB
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is changed
      - iam_role.iam_role.role_name == test_role
      - '"TagB" in iam_role.iam_role.tags'
      - iam_role.iam_role.tags.TagB == "ValueB"

- name: Add second Tag without purge (no change) - check mode
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    purge_tags: false
    tags:
      TagB: ValueB
  register: iam_role
  check_mode: true
- ansible.builtin.assert:
    that:
      - iam_role is not changed

- name: Add second Tag without purge (no change)
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    purge_tags: false
    tags:
      TagB: ValueB
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is not changed
      - iam_role.iam_role.role_name == test_role
      - '"TagB" in iam_role.iam_role.tags'
      - iam_role.iam_role.tags.TagB == "ValueB"

- name: iam_role_info after adding second Tag without purge
  amazon.aws.iam_role_info:
    name: "{{ test_role }}"
  register: role_info
- ansible.builtin.assert:
    that:
      - role_info is succeeded
      - role_info.iam_roles | length == 1
      - role_info.iam_roles[0].arn.startswith("arn")
      - role_info.iam_roles[0].arn.endswith("role/" + test_role )
      - '"assume_role_policy_document" in role_info.iam_roles[0]'
      - '"create_date" in role_info.iam_roles[0]'
      - role_info.iam_roles[0].description == 'Ansible Test Role (updated) '+resource_prefix
      - role_info.iam_roles[0].inline_policies | length == 0
      - role_info.iam_roles[0].instance_profiles | length == 1
      - role_info.iam_roles[0].instance_profiles[0].instance_profile_name == test_role
      - role_info.iam_roles[0].instance_profiles[0].arn.startswith("arn")
      - role_info.iam_roles[0].instance_profiles[0].arn.endswith("instance-profile/" + test_role)
      - role_info.iam_roles[0].managed_policies | length == 0
      - role_info.iam_roles[0].max_session_duration == 43200
      - role_info.iam_roles[0].path == '/'
      - '"permissions_boundary" not in role_info.iam_roles[0]'
      - role_info.iam_roles[0].role_id == iam_role.iam_role.role_id
      - role_info.iam_roles[0].role_name == test_role
      - role_info.iam_roles[0].tags | length == 2
      - '"TagA" in role_info.iam_roles[0].tags'
      - role_info.iam_roles[0].tags.TagA == "AValue"
      - '"TagB" in role_info.iam_roles[0].tags'
      - role_info.iam_roles[0].tags.TagB == "ValueB"

# ------------------------------------------------------------------------------------------

- name: Purge first tag (CHECK MODE)
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    purge_tags: true
    tags:
      TagB: ValueB
  check_mode: true
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is changed

- name: Purge first tag
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    purge_tags: true
    tags:
      TagB: ValueB
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is changed
      - iam_role.iam_role.role_name == test_role
      - '"TagB" in iam_role.iam_role.tags'
      - iam_role.iam_role.tags.TagB == "ValueB"

- name: Purge first tag (no change) - check mode
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    purge_tags: true
    tags:
      TagB: ValueB
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is not changed

- name: Purge first tag (no change)
  amazon.aws.iam_role:
    name: "{{ test_role }}"
    purge_tags: true
    tags:
      TagB: ValueB
  register: iam_role
- ansible.builtin.assert:
    that:
      - iam_role is not changed
      - iam_role.iam_role.role_name == test_role
      - '"TagB" in iam_role.iam_role.tags'
      - iam_role.iam_role.tags.TagB == "ValueB"

- name: iam_role_info after purging first Tag
  amazon.aws.iam_role_info:
    name: "{{ test_role }}"
  register: role_info
- ansible.builtin.assert:
    that:
      - role_info is succeeded
      - role_info.iam_roles | length == 1
      - role_info.iam_roles[0].arn.startswith("arn")
      - role_info.iam_roles[0].arn.endswith("role/" + test_role )
      - '"assume_role_policy_document" in role_info.iam_roles[0]'
      - '"create_date" in role_info.iam_roles[0]'
      - role_info.iam_roles[0].description == 'Ansible Test Role (updated) '+resource_prefix
      - role_info.iam_roles[0].inline_policies | length == 0
      - role_info.iam_roles[0].instance_profiles | length == 1
      - role_info.iam_roles[0].instance_profiles[0].instance_profile_name == test_role
      - role_info.iam_roles[0].instance_profiles[0].arn.startswith("arn")
      - role_info.iam_roles[0].instance_profiles[0].arn.endswith("instance-profile/" + test_role)
      - role_info.iam_roles[0].managed_policies | length == 0
      - role_info.iam_roles[0].max_session_duration == 43200
      - role_info.iam_roles[0].path == '/'
      - '"permissions_boundary" not in role_info.iam_roles[0]'
      - role_info.iam_roles[0].role_id == iam_role.iam_role.role_id
      - role_info.iam_roles[0].role_name == test_role
      - role_info.iam_roles[0].tags | length == 1
      - '"TagA" not in role_info.iam_roles[0].tags'
      - '"TagB" in role_info.iam_roles[0].tags'
      - role_info.iam_roles[0].tags.TagB == "ValueB"
