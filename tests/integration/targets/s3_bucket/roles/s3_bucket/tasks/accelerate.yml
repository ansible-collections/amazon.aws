---
- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - ansible.builtin.set_fact:
        local_bucket_name: "{{ s3_bucket_name | hash('md5') }}-accelerate"

    # ============================================================

    - name: Create a simple bucket
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed
          - not output.accelerate_enabled

    - name: Re-disable transfer acceleration (idempotency)
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present
        accelerate_enabled: false
      register: output

    - ansible.builtin.assert:
        that:
          - not output.changed
          - not output.accelerate_enabled

    - name: Enable transfer acceleration
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present
        accelerate_enabled: true
      register: output
      ignore_errors: false

    - ansible.builtin.assert:
        that:
          - output.changed
          - output.accelerate_enabled

    - name: Assert transfer acceleration enabled
      amazon.aws.s3_bucket_info:
        name: "{{ local_bucket_name }}"
        bucket_facts:
          bucket_accelerate_configuration: true
      register: output

    - ansible.builtin.assert:
        that:
          - item.bucket_accelerate_configuration["Status"] == "Enabled"
      loop: "{{ output.buckets }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Re-Enable transfer acceleration (idempotency)
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present
        accelerate_enabled: true
      register: output

    - ansible.builtin.assert:
        that:
          - not output.changed
          - output.accelerate_enabled

    - name: Assert transfer acceleration enabled
      amazon.aws.s3_bucket_info:
        name: "{{ local_bucket_name }}"
        bucket_facts:
          bucket_accelerate_configuration: true
      register: output

    - ansible.builtin.assert:
        that:
          - item.bucket_accelerate_configuration["Status"] == "Enabled"
      loop: "{{ output.buckets }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Delete test s3 bucket
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: absent
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed

    # ============================================================

    - name: Create a bucket with transfer accelerate enabled
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: present
        accelerate_enabled: true
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed
          - output.accelerate_enabled

    - name: Assert transfer acceleration enabled
      amazon.aws.s3_bucket_info:
        name: "{{ local_bucket_name }}"
        bucket_facts:
          bucket_accelerate_configuration: true
      register: output

    - ansible.builtin.assert:
        that:
          - item.bucket_accelerate_configuration["Status"] == "Enabled"
      loop: "{{ output.buckets }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Disable transfer accelerate
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: present
        accelerate_enabled: false
      register: output
      ignore_errors: false

    - ansible.builtin.assert:
        that:
          - output.changed
          - not output.accelerate_enabled

    - name: Assert transfer acceleration disabled
      amazon.aws.s3_bucket_info:
        name: "{{ local_bucket_name }}"
        bucket_facts:
          bucket_accelerate_configuration: true
      register: output

    - ansible.builtin.assert:
        that:
          - item.bucket_accelerate_configuration["Status"] == "Disabled"
      loop: "{{ output.buckets }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Re-Enable transfer accelerate (idempotency)
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: present
        accelerate_enabled: true
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed
          - output.accelerate_enabled

    - name: Assert transfer acceleration enabled
      amazon.aws.s3_bucket_info:
        name: "{{ local_bucket_name }}"
        bucket_facts:
          bucket_accelerate_configuration: true
      register: output

    - ansible.builtin.assert:
        that:
          - item.bucket_accelerate_configuration["Status"] == "Enabled"
      loop: "{{ output.buckets }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Touch bucket with transfer accelerate enabled (idempotency)
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: present
        accelerate_enabled: true
      register: output

    - ansible.builtin.assert:
        that:
          - not output.changed
          - output.accelerate_enabled

    - name: Delete test s3 bucket
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: absent
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed

  # ============================================================
  always:
    - name: Ensure all buckets are deleted
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: absent
      ignore_errors: true

    - name: Ensure all buckets are deleted
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: absent
      ignore_errors: true
