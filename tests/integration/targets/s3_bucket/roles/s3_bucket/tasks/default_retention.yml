---
- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - ansible.builtin.set_fact:
        local_bucket_name: "{{ s3_bucket_name | hash('md5') }}-default-retention"

    # ============================================================

    - name: Create a simple bucket with object lock
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present
        object_lock_enabled: true
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed
          - output.object_lock_enabled

    - name: Add object lock default retention
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present
        object_lock_enabled: true
        object_lock_default_retention:
          mode: GOVERNANCE
          days: 1
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed
          - output.object_lock_enabled
          - output.object_lock_default_retention

    - name: Delete test s3 bucket
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: absent
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed

    # ============================================================

    - name: Create a bucket with object lock and default retention enabled
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: present
        object_lock_enabled: true
        object_lock_default_retention:
          mode: GOVERNANCE
          days: 1
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed
          - output.object_lock_enabled
          - output.object_lock_default_retention

    - name: Touch bucket with object lock enabled (idempotency)
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: present
        object_lock_enabled: true
        object_lock_default_retention:
          mode: GOVERNANCE
          days: 1
      register: output

    - ansible.builtin.assert:
        that:
          - not output.changed
          - output.object_lock_enabled
          - output.object_lock_default_retention

    - name: Change bucket with object lock default retention enabled
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: present
        object_lock_enabled: true
        object_lock_default_retention:
          mode: GOVERNANCE
          days: 2
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed
          - output.object_lock_enabled
          - output.object_lock_default_retention

    - name: Disable object lock default retention
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: present
        object_lock_enabled: true
      register: output
      ignore_errors: true

    - ansible.builtin.assert:
        that:
          - not output.changed

    - name: Delete test s3 bucket
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: absent
      register: output

    - ansible.builtin.assert:
        that:
          - output.changed

  # ============================================================
  always:
    - name: Ensure all buckets are deleted
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: absent
      ignore_errors: true

    - name: Ensure all buckets are deleted
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}-2"
        state: absent
      ignore_errors: true
