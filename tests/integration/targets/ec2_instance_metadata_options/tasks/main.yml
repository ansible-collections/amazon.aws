---
- name: test with boto3 version that supports instance_metadata_tags
  module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:

    - name: Create a new instance
      amazon.aws.ec2_instance:
        state: running
        name: "{{ resource_prefix }}-test-basic"
        instance_type: "{{ ec2_instance_type }}"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
        metadata_options:
          http_endpoint: enabled
          http_tokens: required
          instance_metadata_tags: enabled
          http_put_response_hop_limit: 2
        wait: true
      register: instance_creation

    - name: instance with metadata_options created with the right options
      ansible.builtin.assert:
        that:
          - instance_creation is success
          - instance_creation is changed
          - instance_creation.spec.MetadataOptions.HttpEndpoint == 'enabled'
          - instance_creation.spec.MetadataOptions.HttpTokens == 'required'
          - instance_creation.spec.MetadataOptions.InstanceMetadataTags == 'enabled'
          - instance_creation.spec.MetadataOptions.HttpPutResponseHopLimit == 2

    - name: modify metadata_options on existing instance
      amazon.aws.ec2_instance:
        state: present
        name: "{{ resource_prefix }}-test-t3nano-enabled-required"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        instance_type: t3.nano
        metadata_options:
          http_endpoint: enabled
          http_tokens: optional
          http_put_response_hop_limit: 4
        wait: false
      register: metadata_options_update

    - name: fact presented ec2 instance
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-test-t3nano-enabled-required"
      register: presented_instance_fact

    - name: Assert that instance metadata options have been modified successfully
      ansible.builtin.assert:
        that:
          - metadata_options_update is success
          - metadata_options_update is changed
          - presented_instance_fact.instances | length > 0
          - presented_instance_fact.instances.0.state.name in ['running','pending']
          - presented_instance_fact.instances.0.metadata_options.http_endpoint == 'enabled'
          - presented_instance_fact.instances.0.metadata_options.http_tokens == 'optional'
          - presented_instance_fact.instances.0.metadata_options.http_put_response_hop_limit == 4
