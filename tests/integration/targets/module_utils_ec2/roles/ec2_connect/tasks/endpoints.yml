---
# Note 1: With boto3 we can use the FIPS endpoints as a minimal proxy for testing that
# we're using something different.  With boto2 the authentication fails.
#
##################################################################################
# Tests using Endpoints

- name: 'Test basic operation using standard endpoint (aws-parameters)'
  example_module:
    region: '{{ aws_region }}'
    aws_endpoint_url: 'https://ec2.{{ aws_region }}.amazonaws.com'
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    aws_security_token: '{{ security_token }}'
  register: standard_endpoint_result

- name: 'Check that we connected to the standard endpoint'
  assert:
    that:
    - standard_endpoint_result is successful
    #- '"ec2:DescribeImages" in standard_endpoint_result.resource_actions'

- name: 'Test basic operation using standard endpoint - no region (aws-parameters)'
  example_module:
    region: '{{ omit }}'
    aws_endpoint_url: 'https://ec2.{{ aws_region }}.amazonaws.com'
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    aws_security_token: '{{ security_token }}'
  register: standard_endpoint_result

- name: 'Check that we connected to the standard endpoint'
  assert:
    that:
    - standard_endpoint_result is successful
    #- '"ec2:DescribeImages" in standard_endpoint_result.resource_actions'

- name: 'Test basic operation using standard endpoint (aws-parameters)'
  example_module:
    region: '{{ aws_region }}'
    endpoint_url: 'https://ec2.{{ aws_region }}.amazonaws.com'
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    aws_security_token: '{{ security_token }}'
  register: standard_endpoint_result

- name: 'Check that we connected to the standard endpoint'
  assert:
    that:
    - standard_endpoint_result is successful
    #- '"ec2:DescribeImages" in standard_endpoint_result.resource_actions'

- name: 'Test basic operation using standard endpoint (aws-parameters)'
  example_module:
    region: '{{ aws_region }}'
    ec2_url: 'https://ec2.{{ aws_region }}.amazonaws.com'
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    aws_security_token: '{{ security_token }}'
  register: standard_endpoint_result

- name: 'Check that we connected to the standard endpoint'
  assert:
    that:
    - standard_endpoint_result is successful
    #- '"ec2:DescribeImages" in standard_endpoint_result.resource_actions'

##################################################################################
# Tests using environment variables

- name: 'Test basic operation using standard endpoint (aws-environment)'
  example_module:
    region: '{{ aws_region }}'
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    aws_security_token: '{{ security_token }}'
  environment:
    AWS_URL: 'https://ec2.{{ aws_region }}.amazonaws.com'
  register: standard_endpoint_result

- name: 'Check that we connected to the standard endpoint'
  assert:
    that:
    - standard_endpoint_result is successful
    #- '"ec2:DescribeImages" in standard_endpoint_result.resource_actions'

- name: 'Test basic operation using standard endpoint (ec2-environment)'
  example_module:
    region: '{{ aws_region }}'
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    aws_security_token: '{{ security_token }}'
  environment:
    EC2_URL: 'https://ec2.{{ aws_region }}.amazonaws.com'
  register: standard_endpoint_result

- name: 'Check that we connected to the standard endpoint'
  assert:
    that:
    - standard_endpoint_result is successful
    #- '"ec2:DescribeImages" in standard_endpoint_result.resource_actions'

##################################################################################
# Tests using a bad endpoint URL
#   - This demonstrates that endpoint_url overrode region

- name: 'Test with bad endpoint URL'
  example_module:
    region: '{{ aws_region }}'
    endpoint_url: 'https://junk.{{ aws_region }}.amazonaws.com'
    access_key: '{{ aws_access_key }}'
    secret_key: '{{ aws_secret_key }}'
    security_token: '{{ security_token }}'
  register: bad_endpoint
  ignore_errors: True

- assert:
    that:
    - bad_endpoint is failed
