---
- block:
    # Setup an ELB for testing changing one thing at a time
    - name: Create ELB
      elb_classic_lb:
        name: "{{ elb_name }}"
        state: present
        # zones: ['{{ availability_zone_a }}', '{{ availability_zone_b }}']
        listeners: '{{ default_listeners }}'
        health_check: '{{ default_health_check }}'
        wait: true
        scheme: 'internal'
        subnets: ['{{ subnet_a }}', '{{ subnet_b }}']
        security_group_ids: ['{{ sg_a }}']
      register: result

    - name: Verify that simple parameters were set
      assert:
        that:
          - result is changed
          - result.elb.status == "created"
          - availability_zone_a in result.elb.zones
          - availability_zone_b in result.elb.zones
          - subnet_a in result.elb.subnets
          - subnet_b in result.elb.subnets
          - result.elb.health_check.healthy_threshold == 10
          - result.elb.health_check.interval == 30
          # XXX Needs to be set after creation
          # - result.elb.health_check.target == "HTTP:80/index.html"
          - result.elb.health_check.timeout == 5
          - result.elb.health_check.unhealthy_threshold == 2
          - '[80, 80, "HTTP", "HTTP"] in result.elb.listeners'
          - '[8080, 8080, "HTTP", "HTTP"] in result.elb.listeners'
          - sg_a in result.elb.security_group_ids
          - sg_b not in result.elb.security_group_ids
          - sg_c not in result.elb.security_group_ids

    - include_tasks: 'simple_securitygroups.yml'

  always:

    # ============================================================
    - name: remove the test load balancer
      elb_classic_lb:
        name: "{{ elb_name }}"
        state: absent
        wait: true
      register: result
      ignore_errors: true
