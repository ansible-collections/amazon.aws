---
- name: Disable Health Check replacement
  amazon.aws.autoscaling_group:
    name: "{{ default_resource_name }}"
    health_check_period: 10
    default_cooldown: 5
    suspend_processes:
      - ReplaceUnhealthy
    state: present
  register: suspend_health_replacement
- ansible.builtin.assert:
    that:
      - suspend_health_replacement is successful

# =====================================================
#      Test updating the health of all instances
# =====================================================

# Set all to Healthy - no change
- name: instance_ids - all Healthy (idempotency) - check_mode
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_all
  check_mode: True

- ansible.builtin.assert:
    that:
      - current_result is not changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - all Healthy (idempotency)
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_all

- ansible.builtin.assert:
    that:
      - current_result is not changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

# Set all to UnHealthy
- name: instance_ids - all Unhealthy - check_mode
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_all
  check_mode: True

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - all Unhealthy
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_all

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - all Unhealthy (idempotency) - check_mode
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_all
  check_mode: True

- ansible.builtin.assert:
    that:
      - current_result is not changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - all Unhealthy (idempotency)
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_all

- ansible.builtin.assert:
    that:
      - current_result is not changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

# Set all to Healthy again
- name: instance_ids - all Healthy - check_mode
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_all
  check_mode: True

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - all Healthy
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_all

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

# -- implicit instance list --

# implicitly change all
- name: no instance_ids - all Unhealthy
  amazon.aws.autoscaling_instance:
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_all

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

# implicitly change all
- name: no instance_ids - all Healthy
  amazon.aws.autoscaling_instance:
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_all

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_all }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

# =====================================================
#       Test updating the health of one instance
# =====================================================

# Set to Healthy - no change
- name: instance_ids - one Healthy (idempotency) - check_mode
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances[1] }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_one
  check_mode: True

- ansible.builtin.assert:
    that:
      - current_result is not changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_one }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - one Healthy (idempotency)
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances[1] }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_one

- ansible.builtin.assert:
    that:
      - current_result is not changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_one }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

# Set to UnHealthy
- name: instance_ids - one Unhealthy - check_mode
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances[1] }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_one
  check_mode: True

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_one }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - one Unhealthy
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances[1] }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_one

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_one }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - one Unhealthy (idempotency) - check_mode
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances[1] }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_one
  check_mode: True

- ansible.builtin.assert:
    that:
      - current_result is not changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_one }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - one Unhealthy (idempotency)
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances[1] }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Unhealthy
  diff: True
  register: unhealthy_one

- ansible.builtin.assert:
    that:
      - current_result is not changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "UNHEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ unhealthy_one }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

# Set to Healthy again
- name: instance_ids - one Healthy - check_mode
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances[1] }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_one
  check_mode: True

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' not in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_one }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

- name: instance_ids - one Healthy
  amazon.aws.autoscaling_instance:
    instance_ids: "{{ initial_instances[1] }}"
    group_name: "{{ default_resource_name }}"
    state: present
    health: Healthy
  diff: True
  register: healthy_one

- ansible.builtin.assert:
    that:
      - current_result is changed
      - "'autoscaling:SetInstanceHealth' in current_result.resource_actions"
      - "'auto_scaling_instances' in current_result"
      - initial_instances[0] in listed_instance_ids
      - initial_instances[1] in listed_instance_ids
      - "'health_status' in specific_instance_info"
      - specific_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in specific_instance_info"
      - specific_instance_info.protected_from_scale_in == False
      - "'health_status' in other_instance_info"
      - other_instance_info.health_status == "HEALTHY"
      - "'protected_from_scale_in' in other_instance_info"
      - other_instance_info.protected_from_scale_in == False
      # Ensure we only make the limited calls we expect
      - "'autoscaling:DetachInstances' not in current_result.resource_actions"
      - "'autoscaling:AttachInstances' not in current_result.resource_actions"
      - "'autoscaling:SetInstanceProtection' not in current_result.resource_actions"
  vars:
    current_result: "{{ healthy_one }}"
    listed_instance_ids: "{{ current_result.auto_scaling_instances | map(attribute='instance_id') | list }}"
    specific_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[1]) | first }}"
    other_instance_info: "{{ current_result.auto_scaling_instances | selectattr('instance_id', 'equalto', initial_instances[0]) | first }}"

# =====================================================

- name: Enable Health Check replacement
  amazon.aws.autoscaling_group:
    name: "{{ default_resource_name }}"
    suspend_processes: []
    health_check_period: 10
    default_cooldown: 5
    state: present
  register: restore_health_replacement
- ansible.builtin.assert:
    that:
      - restore_health_replacement is successful
