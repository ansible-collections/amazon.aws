---
- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - name: Make basic instance
      amazon.aws.ec2_instance:
        state: present
        name: "{{ resource_prefix }}-checkmode-comparison"
        image_id: "{{ ec2_ami_id }}"
        security_groups: "{{ sg.group_id }}"
        instance_type: "{{ ec2_instance_type }}"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        wait: false
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Value
      register: basic_instance

    - name: Make basic instance (check mode)
      amazon.aws.ec2_instance:
        state: present
        name: "{{ resource_prefix }}-checkmode-comparison-checkmode"
        image_id: "{{ ec2_ami_id }}"
        security_groups: "{{ sg.group_id }}"
        instance_type: "{{ ec2_instance_type }}"
        vpc_subnet_id: "{{ testing_subnet_b.subnet.id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Value
      check_mode: true

    - name: fact presented ec2 instance
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison"
      register: presented_instance_fact

    - name: fact checkmode ec2 instance
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison-checkmode"
      register: checkmode_instance_fact

    - name: Confirm whether the check mode is working normally.
      ansible.builtin.assert:
        that:
          - presented_instance_fact.instances | length > 0
          - checkmode_instance_fact.instances | length == 0

    - name: Stop instance (check mode)
      amazon.aws.ec2_instance:
        state: stopped
        name: "{{ resource_prefix }}-checkmode-comparison"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Value
      check_mode: true

    - name: fact ec2 instance
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison"
      register: confirm_checkmode_stopinstance_fact

    - name: Verify that it was not stopped.
      ansible.builtin.assert:
        that:
          - confirm_checkmode_stopinstance_fact.instances[0].state.name not in ["stopped", "stopping"]

    - name: Stop instance.
      amazon.aws.ec2_instance:
        state: stopped
        name: "{{ resource_prefix }}-checkmode-comparison"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Value
        wait: true
      register: instance_stop

    - name: fact stopped ec2 instance
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison"
      register: confirm_stopinstance_fact

    - name: Verify that it was stopped.
      ansible.builtin.assert:
        that:
          - confirm_stopinstance_fact.instances[0].state.name  in ["stopped", "stopping"]

    - name: Running instance in check mode.
      amazon.aws.ec2_instance:
        state: running
        name: "{{ resource_prefix }}-checkmode-comparison"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Value
      check_mode: true

    - name: fact ec2 instance
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison"
      register: confirm_checkmode_runninginstance_fact

    - name: Verify that it was not running.
      ansible.builtin.assert:
        that:
          - confirm_checkmode_runninginstance_fact.instances[0].state.name != "running"

    - name: Running instance.
      amazon.aws.ec2_instance:
        state: running
        name: "{{ resource_prefix }}-checkmode-comparison"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Value

    - name: fact ec2 instance.
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison"
      register: confirm_runninginstance_fact

    - name: Verify that it was running.
      ansible.builtin.assert:
        that:
          - confirm_runninginstance_fact.instances[0].state.name == "running"

    - name: Tag instance.
      amazon.aws.ec2_instance:
        state: running
        name: "{{ resource_prefix }}-checkmode-comparison"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Other Value
      check_mode: true

    - name: fact ec2 instance.
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison"
      register: confirm_not_tagged

    - name: Verify that it hasn't been re-tagged.
      ansible.builtin.assert:
        that:
          - confirm_not_tagged.instances[0].tags.TestTag == "Some Value"

    - name: Terminate instance in check mode.
      amazon.aws.ec2_instance:
        state: absent
        name: "{{ resource_prefix }}-checkmode-comparison"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Value
        wait: true
      check_mode: true

    - name: fact ec2 instance
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison"
      register: confirm_checkmode_terminatedinstance_fact

    - name: Verify that it was not terminated,
      ansible.builtin.assert:
        that:
          - confirm_checkmode_terminatedinstance_fact.instances[0].state.name != "terminated"

    - name: Terminate instance.
      amazon.aws.ec2_instance:
        state: absent
        name: "{{ resource_prefix }}-checkmode-comparison"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
          TestTag: Some Value
        wait: true

    - name: fact ec2 instance
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ resource_prefix }}-checkmode-comparison"
      register: confirm_terminatedinstance_fact

    - name: Verify that it was terminated,
      ansible.builtin.assert:
        that:
          - confirm_terminatedinstance_fact.instances[0].state.name == "terminated"

  always:
    - name: Terminate checkmode instances
      amazon.aws.ec2_instance:
        state: absent
        filters:
          tag:TestId: "{{ ec2_instance_tag_TestId }}"
        wait: true
      ignore_errors: true
