- name: rds_instance / aurora integration tests
  collections:
  - community.aws
  module_defaults:
    group/aws:
      access_key: '{{ aws_access_key }}'
      secret_key: '{{ aws_secret_key }}'
      session_token: '{{ security_token | default(omit) }}'
      region: '{{ aws_region }}'
  block:

  - name: Ensure the resource doesn't exist
    rds_instance:
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result

  - name: Create minimal aurora cluster in default VPC and default subnet group
    rds_cluster:
      state: present
      engine: aurora-postgresql
      engine_mode: provisioned
      cluster_id: '{{ cluster_id }}'
      username: '{{ username }}'
      password: '{{ password }}'
      tags:
        CreatedBy: rds_instance integration tests
    register: my_cluster

  - assert:
      that:
        - my_cluster.engine_mode == "provisioned"

  - name: Create an Aurora instance
    rds_instance:
      id: '{{ instance_id }}'
      cluster_id: '{{ cluster_id }}'
      engine: aurora-postgresql
      state: present
      db_instance_class: '{{ aurora_db_instance_class }}'
      tags:
        CreatedBy: rds_instance integration tests
    register: result

  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == '{{ instance_id }}'
      - result.tags | length == 1

  - name: Create an Aurora instance with both username/password and id - invalid
    rds_instance:
      id: '{{ instance_id }}-new'
      cluster_id: '{{ cluster_id }}'
      engine: aurora-postgresql
      state: present
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ aurora_db_instance_class }}'
      tags:
        CreatedBy: rds_instance integration tests
    register: result
    ignore_errors: yes

  - assert:
      that:
      - result.failed
      - "'Set master user password for the DB Cluster' in result.msg"

  - name: Attempt to modify password (a cluster-managed attribute)
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      password: '{{ password }}'
      force_update_password: true
      apply_immediately: true
    register: result
    ignore_errors: yes

  - assert:
      that:
      - result.failed
      - "'Modify master user password for the DB Cluster using the ModifyDbCluster\
        \ API' in result.msg"
      - "'Please see rds_cluster' in result.msg"

  - name: Modify aurora instance port (a cluster-managed attribute)
    rds_instance:
      id: '{{ instance_id }}'
      state: present
      port: 1150
    register: result
    ignore_errors: yes

  - assert:
      that:
      - not result.changed
      - "'Modify database endpoint port number for the DB Cluster using the ModifyDbCluster\
        \ API' in result.msg"
      - "'Please see rds_cluster' in result.msg"

  always:

  - name: Delete the instance
    rds_instance:
      id: '{{ item }}'
      state: absent
      skip_final_snapshot: true
      wait: false
    loop:
    - '{{ instance_id }}'
    - '{{ modified_instance_id }}'
    ignore_errors: yes

  - name: Delete the cluster
    rds_cluster:
      cluster_id: '{{ cluster_id }}'
      state: absent
      skip_final_snapshot: true
      wait: false
    ignore_errors: yes
