---
- name: Look up the subnet
  amazon.aws.ec2_vpc_subnet_info:
    filters:
      vpc-id: "{{ vpc.id }}"
  register: subnets_result
- ansible.builtin.set_fact:
    subnet_ids: "{{ subnets_result.subnets|map(attribute='id') }}"
    subnet_cidrs: "{{ subnets_result.subnets|map(attribute='cidr_block') }}"

- name: Drop the DB
  amazon.aws.rds_instance:
    instance_id: wisdom-db-main
    state: absent
    skip_final_snapshot: true
- name: Delete the RDS Cluster
  amazon.aws.rds_cluster:
    engine: aurora-postgresql
    cluster_id: "{{ db_infra_rds_cluster_id }}"
    skip_final_snapshot: true
    state: absent
- name: Delete the subnet group
  amazon.aws.rds_subnet_group:
    state: absent
    name: "{{ db_infra_prefix }}-wisdom-pg"
- name: "Delete the bastion(s)"
  amazon.aws.ec2_instance:
    name: bastion
    state: absent
    vpc_subnet_id: "{{ item }}"
    wait: true
  loop: "{{ subnet_ids }}"
- name: Delete the keypair
  amazon.aws.ec2_key:
    name: "{{ db_infra_keypair_name }}"
    state: absent
- name: Look up the subnets
  amazon.aws.ec2_vpc_subnet_info:
    filters:
      vpc-id: "{{ vpc.id }}"
  register: result_subnets
- name: Delete the subnets
  ec2_vpc_subnet:
    state: absent
    vpc_id: "{{ vpc.id }}"
    cidr: "{{ item }}"
  loop: "{{ subnet_cidrs }}"
- name: Look up the route table
  amazon.aws.ec2_vpc_route_table_info:
    filters:
      vpc-id: "{{ vpc.id }}"
  register: result
- name: Disassociate gateway from route table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc.id }}"
    route_table_id: "{{ item.id }}"
    routes: []
    lookup: id
    gateway_id: None
  with_items: "{{ result.route_tables }}"
- debug: var=result.route_tables
- name: Delete the Public route
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc.id }}"
    route_table_id: "{{ item.id }}"
    lookup: id
    state: absent
  # We cannot remove the the default route of the VPC
  when: "{{ item.associations|length == 0 }}"
  with_items: "{{ result.route_tables }}"
- name: List the security groups
  amazon.aws.ec2_security_group_info:
    filters:
      vpc-id: "{{ vpc.id }}"
  register: result_sg
- name: Delete the security group
  amazon.aws.ec2_security_group:
    group_id: "{{ item.group_id }}"
    state: absent
  when: "item.group_name != 'default'"
  loop: "{{ result_sg.security_groups }}"
- name: Delete the Internet gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc.id }}"
    state: absent
- name: Info about the VPC
  amazon.aws.ec2_vpc_net_info:
    filters:
      vpc-id: "{{ vpc.id }}"
- name: Purge the VPC
  amazon.aws.ec2_vpc_net:
    vpc_id: "{{ vpc.id }}"
    state: absent
