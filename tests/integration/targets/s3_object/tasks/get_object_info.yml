---
- name: Integration test for s3_object_info
  block:
    - name: Create a simple s3_bucket
      s3_bucket:
        name: "{{ bucket_name }}-object-info-test"
        state: present
        object_ownership: BucketOwnerEnforced
        tags:
          "lowercase spaced": "hello cruel world"
          "Title Case": "Hello Cruel World"
          CamelCase: "SimpleCamelCase"
          snake_case: "simple_snake_case"
      register: output

    - name: check that temp directory was made
      assert:
        that:
        - remote_tmp_dir is defined

    - name: Create content
      set_fact:
          content: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,hexdigits,punctuation') }}"

    - name: Create local object-info-test.txt
      copy:
        content: "{{ content }}"
        dest: "{{ remote_tmp_dir }}/object-info-test.txt"

    - name: stat the file
      stat:
        path: "{{ remote_tmp_dir }}/object-info-test.txt"
        get_checksum: yes
      register: upload_file

    - name: Upload a object to bucket
      amazon.aws.aws_s3:
        bucket: "{{ bucket_name }}-object-info-test"
        object: object-info-test.txt
        src: "{{ remote_tmp_dir }}/object-info-test.txt"
        mode: put
        permission: bucket-owner-full-control
        tags:
          "lowercase spaced": "hello cruel world"
          "Title Case": "Hello Cruel World"
          CamelCase: "SimpleCamelCase"
          snake_case: "simple_snake_case"

    - name: List keys
      amazon.aws.s3_object:
        bucket: "{{ bucket_name }}-object-info-test"
        mode: list
      register: list_keys_result

    - name: Get s3 object info
      amazon.aws.s3_object_info:
        bucket_name: "{{ bucket_name }}-object-info-test"
        object_key: "{{ list_keys_result.s3_keys[0] }}"
      register: info_result
    - debug:
        var: info_result

    - assert:
        that:
          - info_result is not failed
          - info_result is not changed

    - name: Get s3 object info
      amazon.aws.s3_object_info:
        bucket_name: "{{ bucket_name }}-object-info-test"
        object_key: "{{ list_keys_result.s3_keys[0] }}"
        object_details:
          object_acl: true
          object_tagging: true
          object_legal_hold: true
          object_lock_configuration: true
          object_attributes: false
          object_retention: true
        object_attributes:
          - ETag
          - ObjectSize
          - StorageClass
          - Checksum
          - ObjectParts
      register: info_result
    - debug:
        var: info_detail_result

    - assert:
        that:
          - info_detail_result is not failed
          - info_detail_result is not changed

  always:
    - name: list bucket object
      s3_object:
        bucket: "{{ bucket_name }}-object-info-test"
        mode: list
      register: objects
      ignore_errors: true

    - name: remove objects from bucket
      s3_object:
        bucket: "{{ bucket_name }}-object-info-test"
        mode: delobj
        object: "{{ obj }}"
      with_items: "{{ objects.s3_keys }}"
      loop_control:
        loop_var: obj
      when: "'s3_keys' in objects"
      ignore_errors: true

    - name: Delete simple s3_buckets
      s3_bucket:
        name: "{{ bucket_name }}-object-info-test"
        state: absent
